<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.onrender.navkolodozvillya.location.GeoIpRepositoryImplTest" time="16.929" tests="2" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/oleh/IdeaProjects/marketplace/target/test-classes:/home/oleh/IdeaProjects/marketplace/target/classes:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.1.1/spring-boot-starter-data-jpa-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.1.1/spring-boot-starter-aop-3.1.1.jar:/home/oleh/.m2/repository/org/aspectj/aspectjweaver/1.9.19/aspectjweaver-1.9.19.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.1.1/spring-boot-starter-jdbc-3.1.1.jar:/home/oleh/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/home/oleh/.m2/repository/org/springframework/spring-jdbc/6.0.10/spring-jdbc-6.0.10.jar:/home/oleh/.m2/repository/org/hibernate/orm/hibernate-core/6.2.5.Final/hibernate-core-6.2.5.Final.jar:/home/oleh/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/oleh/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/oleh/.m2/repository/org/jboss/logging/jboss-logging/3.5.1.Final/jboss-logging-3.5.1.Final.jar:/home/oleh/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/oleh/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/home/oleh/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/oleh/.m2/repository/net/bytebuddy/byte-buddy/1.14.5/byte-buddy-1.14.5.jar:/home/oleh/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.3/jaxb-runtime-4.0.3.jar:/home/oleh/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.3/jaxb-core-4.0.3.jar:/home/oleh/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/home/oleh/.m2/repository/org/glassfish/jaxb/txw2/4.0.3/txw2-4.0.3.jar:/home/oleh/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/oleh/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/oleh/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/home/oleh/.m2/repository/org/springframework/data/spring-data-jpa/3.1.1/spring-data-jpa-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/data/spring-data-commons/3.1.1/spring-data-commons-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/spring-orm/6.0.10/spring-orm-6.0.10.jar:/home/oleh/.m2/repository/org/springframework/spring-context/6.0.10/spring-context-6.0.10.jar:/home/oleh/.m2/repository/org/springframework/spring-tx/6.0.10/spring-tx-6.0.10.jar:/home/oleh/.m2/repository/org/springframework/spring-beans/6.0.10/spring-beans-6.0.10.jar:/home/oleh/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/oleh/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/home/oleh/.m2/repository/org/springframework/spring-aspects/6.0.10/spring-aspects-6.0.10.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.1.1/spring-boot-starter-security-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter/3.1.1/spring-boot-starter-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot/3.1.1/spring-boot-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.1.1/spring-boot-starter-logging-3.1.1.jar:/home/oleh/.m2/repository/ch/qos/logback/logback-classic/1.4.8/logback-classic-1.4.8.jar:/home/oleh/.m2/repository/ch/qos/logback/logback-core/1.4.8/logback-core-1.4.8.jar:/home/oleh/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.20.0/log4j-to-slf4j-2.20.0.jar:/home/oleh/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/home/oleh/.m2/repository/org/slf4j/jul-to-slf4j/2.0.7/jul-to-slf4j-2.0.7.jar:/home/oleh/.m2/repository/org/springframework/spring-aop/6.0.10/spring-aop-6.0.10.jar:/home/oleh/.m2/repository/org/springframework/security/spring-security-config/6.1.1/spring-security-config-6.1.1.jar:/home/oleh/.m2/repository/org/springframework/security/spring-security-web/6.1.1/spring-security-web-6.1.1.jar:/home/oleh/.m2/repository/org/springframework/spring-expression/6.0.10/spring-expression-6.0.10.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.1.1/spring-boot-starter-validation-3.1.1.jar:/home/oleh/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.10/tomcat-embed-el-10.1.10.jar:/home/oleh/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.0.Final/hibernate-validator-8.0.0.Final.jar:/home/oleh/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.1.1/spring-boot-starter-web-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.1.1/spring-boot-starter-json-3.1.1.jar:/home/oleh/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.2/jackson-datatype-jdk8-2.15.2.jar:/home/oleh/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.2/jackson-datatype-jsr310-2.15.2.jar:/home/oleh/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.2/jackson-module-parameter-names-2.15.2.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.1.1/spring-boot-starter-tomcat-3.1.1.jar:/home/oleh/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.10/tomcat-embed-core-10.1.10.jar:/home/oleh/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.10/tomcat-embed-websocket-10.1.10.jar:/home/oleh/.m2/repository/org/springframework/spring-web/6.0.10/spring-web-6.0.10.jar:/home/oleh/.m2/repository/io/micrometer/micrometer-observation/1.11.1/micrometer-observation-1.11.1.jar:/home/oleh/.m2/repository/io/micrometer/micrometer-commons/1.11.1/micrometer-commons-1.11.1.jar:/home/oleh/.m2/repository/org/springframework/spring-webmvc/6.0.10/spring-webmvc-6.0.10.jar:/home/oleh/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/home/oleh/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/home/oleh/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/home/oleh/.m2/repository/org/liquibase/liquibase-core/4.20.0/liquibase-core-4.20.0.jar:/home/oleh/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/oleh/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/oleh/.m2/repository/org/yaml/snakeyaml/1.33/snakeyaml-1.33.jar:/home/oleh/.m2/repository/com/opencsv/opencsv/5.7.1/opencsv-5.7.1.jar:/home/oleh/.m2/repository/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar:/home/oleh/.m2/repository/org/apache/commons/commons-text/1.10.0/commons-text-1.10.0.jar:/home/oleh/.m2/repository/org/apache/commons/commons-collections4/4.4/commons-collections4-4.4.jar:/home/oleh/.m2/repository/io/jsonwebtoken/jjwt-api/0.11.5/jjwt-api-0.11.5.jar:/home/oleh/.m2/repository/io/jsonwebtoken/jjwt-impl/0.11.5/jjwt-impl-0.11.5.jar:/home/oleh/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.11.5/jjwt-jackson-0.11.5.jar:/home/oleh/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.2/jackson-databind-2.15.2.jar:/home/oleh/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.2/jackson-annotations-2.15.2.jar:/home/oleh/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.2/jackson-core-2.15.2.jar:/home/oleh/.m2/repository/org/mapstruct/mapstruct/1.5.5.Final/mapstruct-1.5.5.Final.jar:/home/oleh/.m2/repository/com/github/gavlyukovskiy/datasource-proxy-spring-boot-starter/1.9.0/datasource-proxy-spring-boot-starter-1.9.0.jar:/home/oleh/.m2/repository/com/github/gavlyukovskiy/datasource-decorator-spring-boot-autoconfigure/1.9.0/datasource-decorator-spring-boot-autoconfigure-1.9.0.jar:/home/oleh/.m2/repository/net/ttddyy/datasource-proxy/1.8.1/datasource-proxy-1.8.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.1.1/spring-boot-starter-test-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-test/3.1.1/spring-boot-test-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.1.1/spring-boot-test-autoconfigure-3.1.1.jar:/home/oleh/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/home/oleh/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/home/oleh/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/home/oleh/.m2/repository/net/minidev/json-smart/2.4.11/json-smart-2.4.11.jar:/home/oleh/.m2/repository/net/minidev/accessors-smart/2.4.11/accessors-smart-2.4.11.jar:/home/oleh/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/home/oleh/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/oleh/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/oleh/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3.jar:/home/oleh/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/home/oleh/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/oleh/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/home/oleh/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/oleh/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3.jar:/home/oleh/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/home/oleh/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:/home/oleh/.m2/repository/org/mockito/mockito-core/5.3.1/mockito-core-5.3.1.jar:/home/oleh/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.5/byte-buddy-agent-1.14.5.jar:/home/oleh/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/oleh/.m2/repository/org/mockito/mockito-junit-jupiter/5.3.1/mockito-junit-jupiter-5.3.1.jar:/home/oleh/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/home/oleh/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/oleh/.m2/repository/org/springframework/spring-core/6.0.10/spring-core-6.0.10.jar:/home/oleh/.m2/repository/org/springframework/spring-jcl/6.0.10/spring-jcl-6.0.10.jar:/home/oleh/.m2/repository/org/springframework/spring-test/6.0.10/spring-test-6.0.10.jar:/home/oleh/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-testcontainers/3.1.1/spring-boot-testcontainers-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.1.1/spring-boot-autoconfigure-3.1.1.jar:/home/oleh/.m2/repository/org/testcontainers/testcontainers/1.18.3/testcontainers-1.18.3.jar:/home/oleh/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/oleh/.m2/repository/org/hamcrest/hamcrest-core/2.2/hamcrest-core-2.2.jar:/home/oleh/.m2/repository/org/apache/commons/commons-compress/1.23.0/commons-compress-1.23.0.jar:/home/oleh/.m2/repository/org/rnorth/duct-tape/duct-tape/1.0.8/duct-tape-1.0.8.jar:/home/oleh/.m2/repository/org/jetbrains/annotations/17.0.0/annotations-17.0.0.jar:/home/oleh/.m2/repository/com/github/docker-java/docker-java-api/3.3.0/docker-java-api-3.3.0.jar:/home/oleh/.m2/repository/com/github/docker-java/docker-java-transport-zerodep/3.3.0/docker-java-transport-zerodep-3.3.0.jar:/home/oleh/.m2/repository/com/github/docker-java/docker-java-transport/3.3.0/docker-java-transport-3.3.0.jar:/home/oleh/.m2/repository/net/java/dev/jna/jna/5.12.1/jna-5.12.1.jar:/home/oleh/.m2/repository/org/springframework/security/spring-security-test/6.1.1/spring-security-test-6.1.1.jar:/home/oleh/.m2/repository/org/springframework/security/spring-security-core/6.1.1/spring-security-core-6.1.1.jar:/home/oleh/.m2/repository/org/springframework/security/spring-security-crypto/6.1.1/spring-security-crypto-6.1.1.jar:/home/oleh/.m2/repository/org/testcontainers/junit-jupiter/1.18.3/junit-jupiter-1.18.3.jar:/home/oleh/.m2/repository/org/testcontainers/postgresql/1.18.3/postgresql-1.18.3.jar:/home/oleh/.m2/repository/org/testcontainers/jdbc/1.18.3/jdbc-1.18.3.jar:/home/oleh/.m2/repository/org/testcontainers/database-commons/1.18.3/database-commons-1.18.3.jar:"/>
    <property name="java.vm.vendor" value="Eclipse Adoptium"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://adoptium.net/"/>
    <property name="user.timezone" value="Europe/Helsinki"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="GB"/>
    <property name="sun.boot.library.path" value="/home/oleh/.jdks/temurin-17.0.8/lib"/>
    <property name="sun.java.command" value="/home/oleh/IdeaProjects/marketplace/target/surefire/surefirebooter-20230728075410416_3.jar /home/oleh/IdeaProjects/marketplace/target/surefire 2023-07-28T07-54-10_282-jvmRun1 surefire-20230728075410416_1tmp surefire_0-20230728075410416_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/oleh/IdeaProjects/marketplace/target/test-classes:/home/oleh/IdeaProjects/marketplace/target/classes:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.1.1/spring-boot-starter-data-jpa-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.1.1/spring-boot-starter-aop-3.1.1.jar:/home/oleh/.m2/repository/org/aspectj/aspectjweaver/1.9.19/aspectjweaver-1.9.19.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.1.1/spring-boot-starter-jdbc-3.1.1.jar:/home/oleh/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/home/oleh/.m2/repository/org/springframework/spring-jdbc/6.0.10/spring-jdbc-6.0.10.jar:/home/oleh/.m2/repository/org/hibernate/orm/hibernate-core/6.2.5.Final/hibernate-core-6.2.5.Final.jar:/home/oleh/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/oleh/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/oleh/.m2/repository/org/jboss/logging/jboss-logging/3.5.1.Final/jboss-logging-3.5.1.Final.jar:/home/oleh/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/oleh/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/home/oleh/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/oleh/.m2/repository/net/bytebuddy/byte-buddy/1.14.5/byte-buddy-1.14.5.jar:/home/oleh/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.3/jaxb-runtime-4.0.3.jar:/home/oleh/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.3/jaxb-core-4.0.3.jar:/home/oleh/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/home/oleh/.m2/repository/org/glassfish/jaxb/txw2/4.0.3/txw2-4.0.3.jar:/home/oleh/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/oleh/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/oleh/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/home/oleh/.m2/repository/org/springframework/data/spring-data-jpa/3.1.1/spring-data-jpa-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/data/spring-data-commons/3.1.1/spring-data-commons-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/spring-orm/6.0.10/spring-orm-6.0.10.jar:/home/oleh/.m2/repository/org/springframework/spring-context/6.0.10/spring-context-6.0.10.jar:/home/oleh/.m2/repository/org/springframework/spring-tx/6.0.10/spring-tx-6.0.10.jar:/home/oleh/.m2/repository/org/springframework/spring-beans/6.0.10/spring-beans-6.0.10.jar:/home/oleh/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/oleh/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/home/oleh/.m2/repository/org/springframework/spring-aspects/6.0.10/spring-aspects-6.0.10.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.1.1/spring-boot-starter-security-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter/3.1.1/spring-boot-starter-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot/3.1.1/spring-boot-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.1.1/spring-boot-starter-logging-3.1.1.jar:/home/oleh/.m2/repository/ch/qos/logback/logback-classic/1.4.8/logback-classic-1.4.8.jar:/home/oleh/.m2/repository/ch/qos/logback/logback-core/1.4.8/logback-core-1.4.8.jar:/home/oleh/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.20.0/log4j-to-slf4j-2.20.0.jar:/home/oleh/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/home/oleh/.m2/repository/org/slf4j/jul-to-slf4j/2.0.7/jul-to-slf4j-2.0.7.jar:/home/oleh/.m2/repository/org/springframework/spring-aop/6.0.10/spring-aop-6.0.10.jar:/home/oleh/.m2/repository/org/springframework/security/spring-security-config/6.1.1/spring-security-config-6.1.1.jar:/home/oleh/.m2/repository/org/springframework/security/spring-security-web/6.1.1/spring-security-web-6.1.1.jar:/home/oleh/.m2/repository/org/springframework/spring-expression/6.0.10/spring-expression-6.0.10.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.1.1/spring-boot-starter-validation-3.1.1.jar:/home/oleh/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.10/tomcat-embed-el-10.1.10.jar:/home/oleh/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.0.Final/hibernate-validator-8.0.0.Final.jar:/home/oleh/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.1.1/spring-boot-starter-web-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.1.1/spring-boot-starter-json-3.1.1.jar:/home/oleh/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.2/jackson-datatype-jdk8-2.15.2.jar:/home/oleh/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.2/jackson-datatype-jsr310-2.15.2.jar:/home/oleh/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.2/jackson-module-parameter-names-2.15.2.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.1.1/spring-boot-starter-tomcat-3.1.1.jar:/home/oleh/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.10/tomcat-embed-core-10.1.10.jar:/home/oleh/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.10/tomcat-embed-websocket-10.1.10.jar:/home/oleh/.m2/repository/org/springframework/spring-web/6.0.10/spring-web-6.0.10.jar:/home/oleh/.m2/repository/io/micrometer/micrometer-observation/1.11.1/micrometer-observation-1.11.1.jar:/home/oleh/.m2/repository/io/micrometer/micrometer-commons/1.11.1/micrometer-commons-1.11.1.jar:/home/oleh/.m2/repository/org/springframework/spring-webmvc/6.0.10/spring-webmvc-6.0.10.jar:/home/oleh/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/home/oleh/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/home/oleh/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/home/oleh/.m2/repository/org/liquibase/liquibase-core/4.20.0/liquibase-core-4.20.0.jar:/home/oleh/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/oleh/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/oleh/.m2/repository/org/yaml/snakeyaml/1.33/snakeyaml-1.33.jar:/home/oleh/.m2/repository/com/opencsv/opencsv/5.7.1/opencsv-5.7.1.jar:/home/oleh/.m2/repository/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar:/home/oleh/.m2/repository/org/apache/commons/commons-text/1.10.0/commons-text-1.10.0.jar:/home/oleh/.m2/repository/org/apache/commons/commons-collections4/4.4/commons-collections4-4.4.jar:/home/oleh/.m2/repository/io/jsonwebtoken/jjwt-api/0.11.5/jjwt-api-0.11.5.jar:/home/oleh/.m2/repository/io/jsonwebtoken/jjwt-impl/0.11.5/jjwt-impl-0.11.5.jar:/home/oleh/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.11.5/jjwt-jackson-0.11.5.jar:/home/oleh/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.2/jackson-databind-2.15.2.jar:/home/oleh/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.2/jackson-annotations-2.15.2.jar:/home/oleh/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.2/jackson-core-2.15.2.jar:/home/oleh/.m2/repository/org/mapstruct/mapstruct/1.5.5.Final/mapstruct-1.5.5.Final.jar:/home/oleh/.m2/repository/com/github/gavlyukovskiy/datasource-proxy-spring-boot-starter/1.9.0/datasource-proxy-spring-boot-starter-1.9.0.jar:/home/oleh/.m2/repository/com/github/gavlyukovskiy/datasource-decorator-spring-boot-autoconfigure/1.9.0/datasource-decorator-spring-boot-autoconfigure-1.9.0.jar:/home/oleh/.m2/repository/net/ttddyy/datasource-proxy/1.8.1/datasource-proxy-1.8.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.1.1/spring-boot-starter-test-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-test/3.1.1/spring-boot-test-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.1.1/spring-boot-test-autoconfigure-3.1.1.jar:/home/oleh/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/home/oleh/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/home/oleh/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/home/oleh/.m2/repository/net/minidev/json-smart/2.4.11/json-smart-2.4.11.jar:/home/oleh/.m2/repository/net/minidev/accessors-smart/2.4.11/accessors-smart-2.4.11.jar:/home/oleh/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/home/oleh/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/oleh/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/oleh/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3.jar:/home/oleh/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/home/oleh/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/oleh/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/home/oleh/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/oleh/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3.jar:/home/oleh/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/home/oleh/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:/home/oleh/.m2/repository/org/mockito/mockito-core/5.3.1/mockito-core-5.3.1.jar:/home/oleh/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.5/byte-buddy-agent-1.14.5.jar:/home/oleh/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/oleh/.m2/repository/org/mockito/mockito-junit-jupiter/5.3.1/mockito-junit-jupiter-5.3.1.jar:/home/oleh/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/home/oleh/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/oleh/.m2/repository/org/springframework/spring-core/6.0.10/spring-core-6.0.10.jar:/home/oleh/.m2/repository/org/springframework/spring-jcl/6.0.10/spring-jcl-6.0.10.jar:/home/oleh/.m2/repository/org/springframework/spring-test/6.0.10/spring-test-6.0.10.jar:/home/oleh/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-testcontainers/3.1.1/spring-boot-testcontainers-3.1.1.jar:/home/oleh/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.1.1/spring-boot-autoconfigure-3.1.1.jar:/home/oleh/.m2/repository/org/testcontainers/testcontainers/1.18.3/testcontainers-1.18.3.jar:/home/oleh/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/oleh/.m2/repository/org/hamcrest/hamcrest-core/2.2/hamcrest-core-2.2.jar:/home/oleh/.m2/repository/org/apache/commons/commons-compress/1.23.0/commons-compress-1.23.0.jar:/home/oleh/.m2/repository/org/rnorth/duct-tape/duct-tape/1.0.8/duct-tape-1.0.8.jar:/home/oleh/.m2/repository/org/jetbrains/annotations/17.0.0/annotations-17.0.0.jar:/home/oleh/.m2/repository/com/github/docker-java/docker-java-api/3.3.0/docker-java-api-3.3.0.jar:/home/oleh/.m2/repository/com/github/docker-java/docker-java-transport-zerodep/3.3.0/docker-java-transport-zerodep-3.3.0.jar:/home/oleh/.m2/repository/com/github/docker-java/docker-java-transport/3.3.0/docker-java-transport-3.3.0.jar:/home/oleh/.m2/repository/net/java/dev/jna/jna/5.12.1/jna-5.12.1.jar:/home/oleh/.m2/repository/org/springframework/security/spring-security-test/6.1.1/spring-security-test-6.1.1.jar:/home/oleh/.m2/repository/org/springframework/security/spring-security-core/6.1.1/spring-security-core-6.1.1.jar:/home/oleh/.m2/repository/org/springframework/security/spring-security-crypto/6.1.1/spring-security-crypto-6.1.1.jar:/home/oleh/.m2/repository/org/testcontainers/junit-jupiter/1.18.3/junit-jupiter-1.18.3.jar:/home/oleh/.m2/repository/org/testcontainers/postgresql/1.18.3/postgresql-1.18.3.jar:/home/oleh/.m2/repository/org/testcontainers/jdbc/1.18.3/jdbc-1.18.3.jar:/home/oleh/.m2/repository/org/testcontainers/database-commons/1.18.3/database-commons-1.18.3.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/oleh"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-07-18"/>
    <property name="java.home" value="/home/oleh/.jdks/temurin-17.0.8"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/oleh/IdeaProjects/marketplace"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/home/oleh/IdeaProjects/marketplace/target/surefire/surefirebooter-20230728075410416_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.8+7"/>
    <property name="user.name" value="oleh"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="5.19.0-50-generic"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Temurin-17.0.8+7"/>
    <property name="localRepository" value="/home/oleh/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="idea.version" value="2023.2"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="17.0.8"/>
    <property name="user.dir" value="/home/oleh/IdeaProjects/marketplace"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="16765"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Eclipse Adoptium"/>
    <property name="java.vm.version" value="17.0.8+7"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="canGetLocationByIpWhenExists" classname="com.onrender.navkolodozvillya.location.GeoIpRepositoryImplTest" time="1.099">
    <system-out><![CDATA[07:54:14.274 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.onrender.navkolodozvillya.MarketplaceApplication for test class com.onrender.navkolodozvillya.location.GeoIpRepositoryImplTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.1)

2023-07-28T07:54:15.127+03:00  INFO 16765 --- [           main] c.o.n.location.GeoIpRepositoryImplTest   : Starting GeoIpRepositoryImplTest using Java 17.0.8 with PID 16765 (started by oleh in /home/oleh/IdeaProjects/marketplace)
2023-07-28T07:54:15.138+03:00  INFO 16765 --- [           main] c.o.n.location.GeoIpRepositoryImplTest   : No active profile set, falling back to 1 default profile: "default"
2023-07-28T07:54:16.740+03:00  INFO 16765 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-28T07:54:16.866+03:00  INFO 16765 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 114 ms. Found 5 JPA repository interfaces.
2023-07-28T07:54:17.653+03:00  INFO 16765 --- [           main] o.t.utility.ImageNameSubstitutor         : Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2023-07-28T07:54:17.857+03:00  INFO 16765 --- [           main] o.t.d.DockerClientProviderStrategy       : Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2023-07-28T07:54:18.405+03:00  INFO 16765 --- [           main] o.t.d.DockerClientProviderStrategy       : Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
2023-07-28T07:54:18.407+03:00  INFO 16765 --- [           main] org.testcontainers.DockerClientFactory   : Docker host IP address is localhost
2023-07-28T07:54:18.436+03:00  INFO 16765 --- [           main] org.testcontainers.DockerClientFactory   : Connected to docker: 
  Server Version: 20.10.24
  API Version: 1.41
  Operating System: Ubuntu Core 22
  Total Memory: 11453 MB
2023-07-28T07:54:18.446+03:00  INFO 16765 --- [           main] org.testcontainers.DockerClientFactory   : Checking the system...
2023-07-28T07:54:18.447+03:00  INFO 16765 --- [           main] org.testcontainers.DockerClientFactory   : ✔︎ Docker server version should be at least 1.6.0
2023-07-28T07:54:18.498+03:00  INFO 16765 --- [           main] tc.postgres:14.8                         : Creating container for image: postgres:14.8
2023-07-28T07:54:18.512+03:00  INFO 16765 --- [           main] o.t.utility.RegistryAuthLocator          : Failure when attempting to lookup auth config. Please ignore if you don't have images in an authenticated registry. Details: (dockerImageName: postgres:14.8, configFile: /home/oleh/.docker/config.json, configEnv: DOCKER_AUTH_CONFIG). Falling back to docker-java default behaviour. Exception message: Status 404: No config supplied. Checked in order: /home/oleh/.docker/config.json (file not found), DOCKER_AUTH_CONFIG (not set)
2023-07-28T07:54:18.527+03:00  INFO 16765 --- [           main] tc.testcontainers/ryuk:0.5.1             : Creating container for image: testcontainers/ryuk:0.5.1
2023-07-28T07:54:18.780+03:00  INFO 16765 --- [           main] tc.testcontainers/ryuk:0.5.1             : Container testcontainers/ryuk:0.5.1 is starting: 86a69b55c65cb68432d84c0c9f707ef8516d5915978a5307d311f34332e83dd5
2023-07-28T07:54:19.462+03:00  INFO 16765 --- [           main] tc.testcontainers/ryuk:0.5.1             : Container testcontainers/ryuk:0.5.1 started in PT0.936242921S
2023-07-28T07:54:19.515+03:00  INFO 16765 --- [           main] tc.postgres:14.8                         : Container postgres:14.8 is starting: 0a6cffa299a815c3d031716dcdd9e59ccba20c8a5a65f51bbd7eb997958e6faf
2023-07-28T07:54:22.501+03:00  INFO 16765 --- [           main] tc.postgres:14.8                         : Container postgres:14.8 started in PT4.052991738S
2023-07-28T07:54:22.503+03:00  INFO 16765 --- [           main] tc.postgres:14.8                         : Container is started (JDBC URL: jdbc:postgresql://localhost:32782/test?loggerLevel=OFF)
2023-07-28T07:54:23.167+03:00  INFO 16765 --- [           main] liquibase.database                       : Set default schema name to public
2023-07-28T07:54:23.336+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:23.342+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:23.353+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:23.359+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:23.364+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:23.365+03:00  INFO 16765 --- [           main] liquibase.lockservice                    : Successfully acquired change log lock
2023-07-28T07:54:23.437+03:00  INFO 16765 --- [           main] liquibase.command                        : Dropping Database Objects in schema: test.public
2023-07-28T07:54:23.474+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Creating database history table with name: public.databasechangelog
2023-07-28T07:54:23.491+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:23.496+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:23.839+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:23.897+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:23.898+03:00  INFO 16765 --- [           main] liquibase.database                       : Successfully deleted all supported object types in schema test.public.
2023-07-28T07:54:23.902+03:00  INFO 16765 --- [           main] liquibase.lockservice                    : Successfully released change log lock
All objects dropped from test@jdbc:postgresql://localhost:32782/test?loggerLevel=OFF
2023-07-28T07:54:24.251+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:24.253+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:24.257+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:24.267+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:24.271+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:24.275+03:00  INFO 16765 --- [           main] liquibase.lockservice                    : Successfully acquired change log lock
2023-07-28T07:54:24.281+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Creating database history table with name: public.databasechangelog
2023-07-28T07:54:24.288+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:24.290+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Reading from public.databasechangelog
2023-07-28T07:54:24.294+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:24.305+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V01_create-geoip-tables.sql::1689478830697-1::obaibula
2023-07-28T07:54:24.349+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:24.351+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V01_create-geoip-tables.sql::1689478830697-1::obaibula ran successfully in 17ms
2023-07-28T07:54:24.355+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:24.358+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V01_create-geoip-tables.sql::1689478830697-3::obaibula
2023-07-28T07:54:24.369+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:24.370+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V01_create-geoip-tables.sql::1689478830697-3::obaibula ran successfully in 10ms
2023-07-28T07:54:24.373+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V01_create-geoip-tables.sql::4::obaibula
2023-07-28T07:54:24.383+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:24.384+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V01_create-geoip-tables.sql::4::obaibula ran successfully in 9ms
2023-07-28T07:54:24.386+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V01_create-geoip-tables.sql::5::obaibula
2023-07-28T07:54:24.396+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:24.397+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V01_create-geoip-tables.sql::5::obaibula ran successfully in 9ms
2023-07-28T07:54:24.400+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V02_create-geoip-index.sql::1689478830697-2::obaibula
2023-07-28T07:54:24.404+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:24.408+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V02_create-geoip-index.sql::1689478830697-2::obaibula ran successfully in 4ms
2023-07-28T07:54:24.410+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V03_create-users-table-for-security.sql::6::obaibula
2023-07-28T07:54:24.422+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:24.423+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V03_create-users-table-for-security.sql::6::obaibula ran successfully in 8ms
2023-07-28T07:54:24.426+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V03_create-users-table-for-security.sql::7::obaibula
2023-07-28T07:54:24.431+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:24.432+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V03_create-users-table-for-security.sql::7::obaibula ran successfully in 4ms
2023-07-28T07:54:24.434+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V04_create-tokens-table.sql::8::obaibula
2023-07-28T07:54:24.442+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:24.444+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V04_create-tokens-table.sql::8::obaibula ran successfully in 8ms
2023-07-28T07:54:24.447+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V05_create-carts-table.sql::9::obaibula
2023-07-28T07:54:24.454+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:24.455+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V05_create-carts-table.sql::9::obaibula ran successfully in 5ms
2023-07-28T07:54:24.458+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V06_create-offerings-table.sql::10::obaibula
2023-07-28T07:54:24.467+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:24.468+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V06_create-offerings-table.sql::10::obaibula ran successfully in 9ms
2023-07-28T07:54:24.471+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V07_create-favorite_offerings-table.sql::11::obaibula
2023-07-28T07:54:24.480+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:24.481+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V07_create-favorite_offerings-table.sql::11::obaibula ran successfully in 8ms
2023-07-28T07:54:24.484+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:24.485+03:00  INFO 16765 --- [           main] liquibase                                : Update command completed successfully.
2023-07-28T07:54:24.488+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:24.489+03:00  INFO 16765 --- [           main] liquibase.lockservice                    : Successfully released change log lock
2023-07-28T07:54:24.601+03:00  INFO 16765 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-07-28T07:54:24.678+03:00  INFO 16765 --- [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3833897c
2023-07-28T07:54:24.680+03:00  INFO 16765 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-07-28T07:54:24.740+03:00  INFO 16765 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-28T07:54:24.806+03:00  INFO 16765 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-28T07:54:24.808+03:00  INFO 16765 --- [           main] org.hibernate.cfg.Environment            : HHH000406: Using bytecode reflection optimizer
2023-07-28T07:54:25.027+03:00  INFO 16765 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-07-28T07:54:25.074+03:00  INFO 16765 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-28T07:54:25.513+03:00  INFO 16765 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-07-28T07:54:26.328+03:00  INFO 16765 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-07-28T07:54:26.332+03:00  INFO 16765 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-28T07:54:26.944+03:00  INFO 16765 --- [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2023-07-28T07:54:28.457+03:00  INFO 16765 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@73b77d07, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7f66d549, org.springframework.security.web.context.SecurityContextHolderFilter@1940cb2b, org.springframework.security.web.header.HeaderWriterFilter@2d158175, org.springframework.security.web.authentication.logout.LogoutFilter@16be6b36, com.onrender.navkolodozvillya.config.JwtAuthenticationFilter@1ad2e962, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@53f785df, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@22014338, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@623c62b9, org.springframework.security.web.session.SessionManagementFilter@34c83eb0, org.springframework.security.web.access.ExceptionTranslationFilter@7cb39309, org.springframework.security.web.access.intercept.AuthorizationFilter@17c373d3]
2023-07-28T07:54:28.840+03:00  INFO 16765 --- [           main] c.o.n.location.GeoIpRepositoryImplTest   : Started GeoIpRepositoryImplTest in 14.226 seconds (process running for 18.344)
2023-07-28T07:54:28.888+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["select version()"]
Params:[]
2023-07-28T07:54:28.890+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["select version()"]
Params:[]
2023-07-28T07:54:28.894+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:3, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["select setting from pg_settings where name = 'edb_redwood_date'"]
Params:[]
2023-07-28T07:54:28.933+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Callable, Batch:False, QuerySize:1, BatchSize:0
Query:["select current_schema()"]
Params:[()]
2023-07-28T07:54:28.933+03:00  INFO 16765 --- [           main] liquibase.database                       : Set default schema name to public
2023-07-28T07:54:28.941+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:28.942+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SET SEARCH_PATH TO public, "$user","public""]
Params:[]
2023-07-28T07:54:28.944+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:28.946+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:28.946+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:28.948+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT LOCKED FROM public.databasechangeloglock WHERE ID=1"]
Params:[]
2023-07-28T07:54:28.949+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:28.952+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["UPDATE public.databasechangeloglock SET LOCKED = TRUE, LOCKEDBY = 'oleh-HP-Compaq-6005-Pro-SFF-PC (172.17.0.1)', LOCKGRANTED = NOW() WHERE ID = 1 AND LOCKED = FALSE"]
Params:[]
2023-07-28T07:54:28.953+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:28.954+03:00  INFO 16765 --- [           main] liquibase.lockservice                    : Successfully acquired change log lock
2023-07-28T07:54:28.958+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:28.959+03:00  INFO 16765 --- [           main] liquibase.command                        : Dropping Database Objects in schema: test.public
2023-07-28T07:54:28.978+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT MD5SUM FROM public.databasechangelog WHERE MD5SUM IS NOT NULL LIMIT 1"]
Params:[]
2023-07-28T07:54:28.979+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:28.980+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:28.981+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:28.982+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:28.995+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:6, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT c.relname AS "SEQUENCE_NAME",   s.seqmin AS "MIN_VALUE", s.seqmax AS "MAX_VALUE", s.seqincrement AS "INCREMENT_BY",   s.seqcycle AS "WILL_CYCLE", s.seqstart AS "START_VALUE", s.seqcache AS "CACHE_SIZE",   pg_catalog.format_type(s.seqtypid, NULL) AS "SEQ_TYPE" FROM pg_class c JOIN pg_sequence s on c.oid = s.seqrelid JOIN pg_namespace ns on c.relnamespace = ns.oid LEFT JOIN pg_depend d ON c.oid = d.objid WHERE c.relkind = 'S' AND ns.nspname = 'public' AND (c.oid not in (select ds.objid FROM pg_depend ds where ds.refobjsubid > 0)OR  (   d.deptype = 'a' AND EXISTS (       select 1 from pg_attribute a         JOIN pg_class t ON t.oid = d.refobjid AND a.attrelid=t.oid AND a.attnum=d.refobjsubid         LEFT JOIN pg_catalog.pg_attrdef ad ON ad.adrelid = a.attrelid AND ad.adnum = a.attnum        WHERE a.atthasdef = false or not (pg_get_expr(ad.adbin, ad.adrelid) ilike '%' || c.relname || '%'))   ))"]
Params:[]
2023-07-28T07:54:29.026+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:4, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT     ns.nspname as SCHEMA_NAME,     td.relname as TABLE_NAME,     pa.attname as COLUMN_NAME,     COALESCE(pg_sequence_last_value(c.oid::regclass) + s.seqincrement,       s.seqstart) AS START_VALUE,     s.seqincrement AS INCREMENT_BY FROM pg_class c     JOIN pg_sequence s on c.oid = s.seqrelid     JOIN pg_namespace ns on c.relnamespace = ns.oid     JOIN pg_depend d ON c.oid = d.objid     JOIN pg_class td ON td.oid = d.refobjid     JOIN pg_attribute pa ON  pa.attrelid=td.oid AND pa.attnum=d.refobjsubid WHERE c.relkind = 'S' AND d.deptype = 'a'"]
Params:[]
2023-07-28T07:54:29.087+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:17, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["WITH RECURSIVE preference AS (
    SELECT 10 AS max_depth  -- The deeper the recursion goes, the slower it performs.
         , 16384 AS min_oid -- user objects only
         , '^(londiste|pgq|pg_toast)'::text AS schema_exclusion
         , '^pg_(conversion|language|ts_(dict|template))'::text AS class_exclusion
         , '{"SCHEMA":"00", "TABLE":"01", "CONSTRAINT":"02", "DEFAULT":"03",
      "INDEX":"05", "SEQUENCE":"06", "TRIGGER":"07", "FUNCTION":"08",
      "VIEW":"10", "MVIEW":"11", "FOREIGN":"12"}'::json AS type_ranks),
               dependency_pair AS (
                   WITH relation_object AS ( SELECT oid, oid::regclass::text AS object_name  FROM pg_class )
                   SELECT DISTINCT                          substring(pg_identify_object(classid, objid, 0)::text, E'(\\w+?)\\.') as referenced_schema_name,                          CASE classid
                              WHEN 'pg_constraint'::regclass THEN (SELECT CONTYPE::text FROM pg_constraint WHERE oid = objid)
                              ELSE objid::text
                              END AS CONTYPE,
                         CASE classid
                              WHEN 'pg_attrdef'::regclass THEN (SELECT attname FROM pg_attrdef d JOIN pg_attribute c ON (c.attrelid,c.attnum)=(d.adrelid,d.adnum) WHERE d.oid = objid)
                              WHEN 'pg_cast'::regclass THEN (SELECT concat(castsource::regtype::text, ' AS ', casttarget::regtype::text,' WITH ', castfunc::regprocedure::text) FROM pg_cast WHERE oid = objid)
                              WHEN 'pg_class'::regclass THEN rel.object_name
                              WHEN 'pg_constraint'::regclass THEN (SELECT conname FROM pg_constraint WHERE oid = objid)
                              WHEN 'pg_extension'::regclass THEN (SELECT extname FROM pg_extension WHERE oid = objid)
                              WHEN 'pg_namespace'::regclass THEN (SELECT nspname FROM pg_namespace WHERE oid = objid)
                              WHEN 'pg_opclass'::regclass THEN (SELECT opcname FROM pg_opclass WHERE oid = objid)
                              WHEN 'pg_operator'::regclass THEN (SELECT oprname FROM pg_operator WHERE oid = objid)
                              WHEN 'pg_opfamily'::regclass THEN (SELECT opfname FROM pg_opfamily WHERE oid = objid)
                              WHEN 'pg_proc'::regclass THEN objid::regprocedure::text
                              WHEN 'pg_rewrite'::regclass THEN (SELECT ev_class::regclass::text FROM pg_rewrite WHERE oid = objid)
                              WHEN 'pg_trigger'::regclass THEN (SELECT tgname FROM pg_trigger WHERE oid = objid)
                              WHEN 'pg_type'::regclass THEN objid::regtype::text
                              ELSE objid::text
                              END AS REFERENCED_NAME,
                          substring(pg_identify_object(refclassid, refobjid, 0)::text, E'(\\w+?)\\.') as referencing_schema_name,                           CASE refclassid
                              WHEN 'pg_namespace'::regclass THEN (SELECT nspname FROM pg_namespace WHERE oid = refobjid)
                              WHEN 'pg_class'::regclass THEN rrel.object_name
                              WHEN 'pg_opfamily'::regclass THEN (SELECT opfname FROM pg_opfamily WHERE oid = refobjid)
                              WHEN 'pg_proc'::regclass THEN refobjid::regprocedure::text
                              WHEN 'pg_type'::regclass THEN refobjid::regtype::text
                              ELSE refobjid::text
                              END AS REFERENCING_NAME
                   FROM pg_depend dep
                            LEFT JOIN relation_object rel ON rel.oid = dep.objid
                            LEFT JOIN relation_object rrel ON rrel.oid = dep.refobjid, preference
                   WHERE deptype = ANY('{n,a}')
                     AND objid >= preference.min_oid
                     AND (refobjid >= preference.min_oid OR refobjid = 2200) -- need public schema as root node
                     AND classid::regclass::text !~ preference.class_exclusion
                     AND refclassid::regclass::text !~ preference.class_exclusion
                     AND COALESCE(SUBSTRING(objid::regclass::text, E'^(\\\\w+)\\\\.'),'') !~ preference.schema_exclusion
                     AND COALESCE(SUBSTRING(refobjid::regclass::text, E'^(\\\\w+)\\\\.'),'') !~ preference.schema_exclusion
                   GROUP BY classid, objid, refclassid, refobjid, deptype, rel.object_name, rrel.object_name
               )
 select referenced_schema_name,
    (CASE
      WHEN position('.' in referenced_name) >0 THEN substring(referenced_name from position('.' in referenced_name)+1 for length(referenced_name))
      ELSE referenced_name
    END)  AS referenced_name, 
   referencing_schema_name,
   (CASE
      WHEN position('.' in referencing_name) >0 THEN substring(referencing_name from position('.' in referencing_name)+1 for length(referencing_name))
      ELSE referencing_name
    END)  AS referencing_name from dependency_pair where REFERENCED_NAME != REFERENCING_NAME  AND ( REFERENCED_NAME like 'public.%' OR REFERENCED_NAME NOT LIKE '%.%')
 AND (CONTYPE::text != 'p' AND CONTYPE::text != 'f')
 AND referencing_schema_name is not null and referencing_name is not null"]
Params:[]
2023-07-28T07:54:29.103+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:12, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["WITH RECURSIVE preference AS (
    SELECT 10 AS max_depth  -- The deeper the recursion goes, the slower it performs.
         , 16384 AS min_oid -- user objects only
         , '^(londiste|pgq|pg_toast)'::text AS schema_exclusion
         , '^pg_(conversion|language|ts_(dict|template))'::text AS class_exclusion
         , '{"SCHEMA":"00", "TABLE":"01", "CONSTRAINT":"02", "DEFAULT":"03",
      "INDEX":"05", "SEQUENCE":"06", "TRIGGER":"07", "FUNCTION":"08",
      "VIEW":"10", "MVIEW":"11", "FOREIGN":"12"}'::json AS type_ranks),
               dependency_pair AS (
                   WITH relation_object AS ( SELECT oid, oid::regclass::text AS object_name  FROM pg_class )
                   SELECT DISTINCT                          substring(pg_identify_object(classid, objid, 0)::text, E'(\\w+?)\\.') as referenced_schema_name,                          CASE classid
                              WHEN 'pg_constraint'::regclass THEN (SELECT CONTYPE::text FROM pg_constraint WHERE oid = objid)
                              ELSE objid::text
                              END AS CONTYPE,
                         CASE classid
                              WHEN 'pg_attrdef'::regclass THEN (SELECT attname FROM pg_attrdef d JOIN pg_attribute c ON (c.attrelid,c.attnum)=(d.adrelid,d.adnum) WHERE d.oid = objid)
                              WHEN 'pg_cast'::regclass THEN (SELECT concat(castsource::regtype::text, ' AS ', casttarget::regtype::text,' WITH ', castfunc::regprocedure::text) FROM pg_cast WHERE oid = objid)
                              WHEN 'pg_class'::regclass THEN rel.object_name
                              WHEN 'pg_constraint'::regclass THEN (SELECT conname FROM pg_constraint WHERE oid = objid)
                              WHEN 'pg_extension'::regclass THEN (SELECT extname FROM pg_extension WHERE oid = objid)
                              WHEN 'pg_namespace'::regclass THEN (SELECT nspname FROM pg_namespace WHERE oid = objid)
                              WHEN 'pg_opclass'::regclass THEN (SELECT opcname FROM pg_opclass WHERE oid = objid)
                              WHEN 'pg_operator'::regclass THEN (SELECT oprname FROM pg_operator WHERE oid = objid)
                              WHEN 'pg_opfamily'::regclass THEN (SELECT opfname FROM pg_opfamily WHERE oid = objid)
                              WHEN 'pg_proc'::regclass THEN objid::regprocedure::text
                              WHEN 'pg_rewrite'::regclass THEN (SELECT ev_class::regclass::text FROM pg_rewrite WHERE oid = objid)
                              WHEN 'pg_trigger'::regclass THEN (SELECT tgname FROM pg_trigger WHERE oid = objid)
                              WHEN 'pg_type'::regclass THEN objid::regtype::text
                              ELSE objid::text
                              END AS REFERENCED_NAME,
                          substring(pg_identify_object(refclassid, refobjid, 0)::text, E'(\\w+?)\\.') as referencing_schema_name,                           CASE refclassid
                              WHEN 'pg_namespace'::regclass THEN (SELECT nspname FROM pg_namespace WHERE oid = refobjid)
                              WHEN 'pg_class'::regclass THEN rrel.object_name
                              WHEN 'pg_opfamily'::regclass THEN (SELECT opfname FROM pg_opfamily WHERE oid = refobjid)
                              WHEN 'pg_proc'::regclass THEN refobjid::regprocedure::text
                              WHEN 'pg_type'::regclass THEN refobjid::regtype::text
                              ELSE refobjid::text
                              END AS REFERENCING_NAME
                   FROM pg_depend dep
                            LEFT JOIN relation_object rel ON rel.oid = dep.objid
                            LEFT JOIN relation_object rrel ON rrel.oid = dep.refobjid, preference
                   WHERE deptype = ANY('{n,a}')
                     AND objid >= preference.min_oid
                     AND (refobjid >= preference.min_oid OR refobjid = 2200) -- need public schema as root node
                     AND classid::regclass::text !~ preference.class_exclusion
                     AND refclassid::regclass::text !~ preference.class_exclusion
                     AND COALESCE(SUBSTRING(objid::regclass::text, E'^(\\\\w+)\\\\.'),'') !~ preference.schema_exclusion
                     AND COALESCE(SUBSTRING(refobjid::regclass::text, E'^(\\\\w+)\\\\.'),'') !~ preference.schema_exclusion
                   GROUP BY classid, objid, refclassid, refobjid, deptype, rel.object_name, rrel.object_name
               )
 select referenced_schema_name,
    (CASE
      WHEN position('.' in referenced_name) >0 THEN substring(referenced_name from position('.' in referenced_name)+1 for length(referenced_name))
      ELSE referenced_name
    END)  AS referenced_name, 
   referencing_schema_name,
   (CASE
      WHEN position('.' in referencing_name) >0 THEN substring(referencing_name from position('.' in referencing_name)+1 for length(referencing_name))
      ELSE referencing_name
    END)  AS referencing_name from dependency_pair where REFERENCED_NAME != REFERENCING_NAME  AND ( REFERENCED_NAME like 'public.%' OR REFERENCED_NAME NOT LIKE '%.%')
 AND (CONTYPE::text != 'p' AND CONTYPE::text != 'f')
 AND referencing_schema_name is not null and referencing_name is not null"]
Params:[]
2023-07-28T07:54:29.123+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:18, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["WITH RECURSIVE preference AS (
    SELECT 10 AS max_depth  -- The deeper the recursion goes, the slower it performs.
         , 16384 AS min_oid -- user objects only
         , '^(londiste|pgq|pg_toast)'::text AS schema_exclusion
         , '^pg_(conversion|language|ts_(dict|template))'::text AS class_exclusion
         , '{"SCHEMA":"00", "TABLE":"01", "CONSTRAINT":"02", "DEFAULT":"03",
      "INDEX":"05", "SEQUENCE":"06", "TRIGGER":"07", "FUNCTION":"08",
      "VIEW":"10", "MVIEW":"11", "FOREIGN":"12"}'::json AS type_ranks),
               dependency_pair AS (
                   WITH relation_object AS ( SELECT oid, oid::regclass::text AS object_name  FROM pg_class )
                   SELECT DISTINCT                          substring(pg_identify_object(classid, objid, 0)::text, E'(\\w+?)\\.') as referenced_schema_name,                          CASE classid
                              WHEN 'pg_constraint'::regclass THEN (SELECT CONTYPE::text FROM pg_constraint WHERE oid = objid)
                              ELSE objid::text
                              END AS CONTYPE,
                         CASE classid
                              WHEN 'pg_attrdef'::regclass THEN (SELECT attname FROM pg_attrdef d JOIN pg_attribute c ON (c.attrelid,c.attnum)=(d.adrelid,d.adnum) WHERE d.oid = objid)
                              WHEN 'pg_cast'::regclass THEN (SELECT concat(castsource::regtype::text, ' AS ', casttarget::regtype::text,' WITH ', castfunc::regprocedure::text) FROM pg_cast WHERE oid = objid)
                              WHEN 'pg_class'::regclass THEN rel.object_name
                              WHEN 'pg_constraint'::regclass THEN (SELECT conname FROM pg_constraint WHERE oid = objid)
                              WHEN 'pg_extension'::regclass THEN (SELECT extname FROM pg_extension WHERE oid = objid)
                              WHEN 'pg_namespace'::regclass THEN (SELECT nspname FROM pg_namespace WHERE oid = objid)
                              WHEN 'pg_opclass'::regclass THEN (SELECT opcname FROM pg_opclass WHERE oid = objid)
                              WHEN 'pg_operator'::regclass THEN (SELECT oprname FROM pg_operator WHERE oid = objid)
                              WHEN 'pg_opfamily'::regclass THEN (SELECT opfname FROM pg_opfamily WHERE oid = objid)
                              WHEN 'pg_proc'::regclass THEN objid::regprocedure::text
                              WHEN 'pg_rewrite'::regclass THEN (SELECT ev_class::regclass::text FROM pg_rewrite WHERE oid = objid)
                              WHEN 'pg_trigger'::regclass THEN (SELECT tgname FROM pg_trigger WHERE oid = objid)
                              WHEN 'pg_type'::regclass THEN objid::regtype::text
                              ELSE objid::text
                              END AS REFERENCED_NAME,
                          substring(pg_identify_object(refclassid, refobjid, 0)::text, E'(\\w+?)\\.') as referencing_schema_name,                           CASE refclassid
                              WHEN 'pg_namespace'::regclass THEN (SELECT nspname FROM pg_namespace WHERE oid = refobjid)
                              WHEN 'pg_class'::regclass THEN rrel.object_name
                              WHEN 'pg_opfamily'::regclass THEN (SELECT opfname FROM pg_opfamily WHERE oid = refobjid)
                              WHEN 'pg_proc'::regclass THEN refobjid::regprocedure::text
                              WHEN 'pg_type'::regclass THEN refobjid::regtype::text
                              ELSE refobjid::text
                              END AS REFERENCING_NAME
                   FROM pg_depend dep
                            LEFT JOIN relation_object rel ON rel.oid = dep.objid
                            LEFT JOIN relation_object rrel ON rrel.oid = dep.refobjid, preference
                   WHERE deptype = ANY('{n,a}')
                     AND objid >= preference.min_oid
                     AND (refobjid >= preference.min_oid OR refobjid = 2200) -- need public schema as root node
                     AND classid::regclass::text !~ preference.class_exclusion
                     AND refclassid::regclass::text !~ preference.class_exclusion
                     AND COALESCE(SUBSTRING(objid::regclass::text, E'^(\\\\w+)\\\\.'),'') !~ preference.schema_exclusion
                     AND COALESCE(SUBSTRING(refobjid::regclass::text, E'^(\\\\w+)\\\\.'),'') !~ preference.schema_exclusion
                   GROUP BY classid, objid, refclassid, refobjid, deptype, rel.object_name, rrel.object_name
               )
 select referenced_schema_name,
    (CASE
      WHEN position('.' in referenced_name) >0 THEN substring(referenced_name from position('.' in referenced_name)+1 for length(referenced_name))
      ELSE referenced_name
    END)  AS referenced_name, 
   referencing_schema_name,
   (CASE
      WHEN position('.' in referencing_name) >0 THEN substring(referencing_name from position('.' in referencing_name)+1 for length(referencing_name))
      ELSE referencing_name
    END)  AS referencing_name from dependency_pair where REFERENCED_NAME != REFERENCING_NAME  AND ( REFERENCED_NAME like 'public.%' OR REFERENCED_NAME NOT LIKE '%.%')
 AND (CONTYPE::text != 'p' AND CONTYPE::text != 'f')
 AND referencing_schema_name is not null and referencing_name is not null"]
Params:[]
2023-07-28T07:54:29.171+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:13, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["WITH RECURSIVE preference AS (
    SELECT 10 AS max_depth  -- The deeper the recursion goes, the slower it performs.
         , 16384 AS min_oid -- user objects only
         , '^(londiste|pgq|pg_toast)'::text AS schema_exclusion
         , '^pg_(conversion|language|ts_(dict|template))'::text AS class_exclusion
         , '{"SCHEMA":"00", "TABLE":"01", "CONSTRAINT":"02", "DEFAULT":"03",
      "INDEX":"05", "SEQUENCE":"06", "TRIGGER":"07", "FUNCTION":"08",
      "VIEW":"10", "MVIEW":"11", "FOREIGN":"12"}'::json AS type_ranks),
               dependency_pair AS (
                   WITH relation_object AS ( SELECT oid, oid::regclass::text AS object_name  FROM pg_class )
                   SELECT DISTINCT                          substring(pg_identify_object(classid, objid, 0)::text, E'(\\w+?)\\.') as referenced_schema_name,                          CASE classid
                              WHEN 'pg_constraint'::regclass THEN (SELECT CONTYPE::text FROM pg_constraint WHERE oid = objid)
                              ELSE objid::text
                              END AS CONTYPE,
                         CASE classid
                              WHEN 'pg_attrdef'::regclass THEN (SELECT attname FROM pg_attrdef d JOIN pg_attribute c ON (c.attrelid,c.attnum)=(d.adrelid,d.adnum) WHERE d.oid = objid)
                              WHEN 'pg_cast'::regclass THEN (SELECT concat(castsource::regtype::text, ' AS ', casttarget::regtype::text,' WITH ', castfunc::regprocedure::text) FROM pg_cast WHERE oid = objid)
                              WHEN 'pg_class'::regclass THEN rel.object_name
                              WHEN 'pg_constraint'::regclass THEN (SELECT conname FROM pg_constraint WHERE oid = objid)
                              WHEN 'pg_extension'::regclass THEN (SELECT extname FROM pg_extension WHERE oid = objid)
                              WHEN 'pg_namespace'::regclass THEN (SELECT nspname FROM pg_namespace WHERE oid = objid)
                              WHEN 'pg_opclass'::regclass THEN (SELECT opcname FROM pg_opclass WHERE oid = objid)
                              WHEN 'pg_operator'::regclass THEN (SELECT oprname FROM pg_operator WHERE oid = objid)
                              WHEN 'pg_opfamily'::regclass THEN (SELECT opfname FROM pg_opfamily WHERE oid = objid)
                              WHEN 'pg_proc'::regclass THEN objid::regprocedure::text
                              WHEN 'pg_rewrite'::regclass THEN (SELECT ev_class::regclass::text FROM pg_rewrite WHERE oid = objid)
                              WHEN 'pg_trigger'::regclass THEN (SELECT tgname FROM pg_trigger WHERE oid = objid)
                              WHEN 'pg_type'::regclass THEN objid::regtype::text
                              ELSE objid::text
                              END AS REFERENCED_NAME,
                          substring(pg_identify_object(refclassid, refobjid, 0)::text, E'(\\w+?)\\.') as referencing_schema_name,                           CASE refclassid
                              WHEN 'pg_namespace'::regclass THEN (SELECT nspname FROM pg_namespace WHERE oid = refobjid)
                              WHEN 'pg_class'::regclass THEN rrel.object_name
                              WHEN 'pg_opfamily'::regclass THEN (SELECT opfname FROM pg_opfamily WHERE oid = refobjid)
                              WHEN 'pg_proc'::regclass THEN refobjid::regprocedure::text
                              WHEN 'pg_type'::regclass THEN refobjid::regtype::text
                              ELSE refobjid::text
                              END AS REFERENCING_NAME
                   FROM pg_depend dep
                            LEFT JOIN relation_object rel ON rel.oid = dep.objid
                            LEFT JOIN relation_object rrel ON rrel.oid = dep.refobjid, preference
                   WHERE deptype = ANY('{n,a}')
                     AND objid >= preference.min_oid
                     AND (refobjid >= preference.min_oid OR refobjid = 2200) -- need public schema as root node
                     AND classid::regclass::text !~ preference.class_exclusion
                     AND refclassid::regclass::text !~ preference.class_exclusion
                     AND COALESCE(SUBSTRING(objid::regclass::text, E'^(\\\\w+)\\\\.'),'') !~ preference.schema_exclusion
                     AND COALESCE(SUBSTRING(refobjid::regclass::text, E'^(\\\\w+)\\\\.'),'') !~ preference.schema_exclusion
                   GROUP BY classid, objid, refclassid, refobjid, deptype, rel.object_name, rrel.object_name
               )
 select referenced_schema_name,
    (CASE
      WHEN position('.' in referenced_name) >0 THEN substring(referenced_name from position('.' in referenced_name)+1 for length(referenced_name))
      ELSE referenced_name
    END)  AS referenced_name, 
   referencing_schema_name,
   (CASE
      WHEN position('.' in referencing_name) >0 THEN substring(referencing_name from position('.' in referencing_name)+1 for length(referencing_name))
      ELSE referencing_name
    END)  AS referencing_name from dependency_pair where REFERENCED_NAME != REFERENCING_NAME  AND ( REFERENCED_NAME like 'public.%' OR REFERENCED_NAME NOT LIKE '%.%')
 AND (CONTYPE::text != 'p' AND CONTYPE::text != 'f')
 AND referencing_schema_name is not null and referencing_name is not null"]
Params:[]
2023-07-28T07:54:29.197+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DROP TABLE "public"."favourite_offerings" CASCADE"]
Params:[]
2023-07-28T07:54:29.201+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DROP TABLE "public"."offerings" CASCADE"]
Params:[]
2023-07-28T07:54:29.205+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DROP TABLE "public"."carts" CASCADE"]
Params:[]
2023-07-28T07:54:29.208+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DROP TABLE "public"."tokens" CASCADE"]
Params:[]
2023-07-28T07:54:29.211+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DROP TABLE "public"."users" CASCADE"]
Params:[]
2023-07-28T07:54:29.214+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DROP TABLE "public"."geoip2_network" CASCADE"]
Params:[]
2023-07-28T07:54:29.218+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DROP TABLE "public"."geoip2_location" CASCADE"]
Params:[]
2023-07-28T07:54:29.221+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM "public"."databasechangelog""]
Params:[]
2023-07-28T07:54:29.227+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:3, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["select CONSTRAINT_NAME, TABLE_NAME from information_schema.table_constraints where constraint_catalog='test' and constraint_schema='public' and constraint_type='UNIQUE' and table_name='databasechangelog'"]
Params:[]
2023-07-28T07:54:29.268+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT c.relname AS "SEQUENCE_NAME",   s.seqmin AS "MIN_VALUE", s.seqmax AS "MAX_VALUE", s.seqincrement AS "INCREMENT_BY",   s.seqcycle AS "WILL_CYCLE", s.seqstart AS "START_VALUE", s.seqcache AS "CACHE_SIZE",   pg_catalog.format_type(s.seqtypid, NULL) AS "SEQ_TYPE" FROM pg_class c JOIN pg_sequence s on c.oid = s.seqrelid JOIN pg_namespace ns on c.relnamespace = ns.oid LEFT JOIN pg_depend d ON c.oid = d.objid WHERE c.relkind = 'S' AND ns.nspname = 'public' AND (c.oid not in (select ds.objid FROM pg_depend ds where ds.refobjsubid > 0)OR  (   d.deptype = 'a' AND EXISTS (       select 1 from pg_attribute a         JOIN pg_class t ON t.oid = d.refobjid AND a.attrelid=t.oid AND a.attnum=d.refobjsubid         LEFT JOIN pg_catalog.pg_attrdef ad ON ad.adrelid = a.attrelid AND ad.adnum = a.attnum        WHERE a.atthasdef = false or not (pg_get_expr(ad.adbin, ad.adrelid) ilike '%' || c.relname || '%'))   ))"]
Params:[]
2023-07-28T07:54:29.272+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["select CONSTRAINT_NAME, TABLE_NAME from information_schema.table_constraints where constraint_catalog='test' and constraint_schema='public' and constraint_type='UNIQUE' and table_name='databasechangeloglock'"]
Params:[]
2023-07-28T07:54:29.309+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DROP TABLE "public"."databasechangelog""]
Params:[]
2023-07-28T07:54:29.309+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:29.311+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM "public"."databasechangeloglock""]
Params:[]
2023-07-28T07:54:29.316+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["select CONSTRAINT_NAME, TABLE_NAME from information_schema.table_constraints where constraint_catalog='test' and constraint_schema='public' and constraint_type='UNIQUE' and table_name='databasechangeloglock'"]
Params:[]
2023-07-28T07:54:29.353+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:3, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT c.relname AS "SEQUENCE_NAME",   s.seqmin AS "MIN_VALUE", s.seqmax AS "MAX_VALUE", s.seqincrement AS "INCREMENT_BY",   s.seqcycle AS "WILL_CYCLE", s.seqstart AS "START_VALUE", s.seqcache AS "CACHE_SIZE",   pg_catalog.format_type(s.seqtypid, NULL) AS "SEQ_TYPE" FROM pg_class c JOIN pg_sequence s on c.oid = s.seqrelid JOIN pg_namespace ns on c.relnamespace = ns.oid LEFT JOIN pg_depend d ON c.oid = d.objid WHERE c.relkind = 'S' AND ns.nspname = 'public' AND (c.oid not in (select ds.objid FROM pg_depend ds where ds.refobjsubid > 0)OR  (   d.deptype = 'a' AND EXISTS (       select 1 from pg_attribute a         JOIN pg_class t ON t.oid = d.refobjid AND a.attrelid=t.oid AND a.attnum=d.refobjsubid         LEFT JOIN pg_catalog.pg_attrdef ad ON ad.adrelid = a.attrelid AND ad.adnum = a.attnum        WHERE a.atthasdef = false or not (pg_get_expr(ad.adbin, ad.adrelid) ilike '%' || c.relname || '%'))   ))"]
Params:[]
2023-07-28T07:54:29.371+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DROP TABLE "public"."databasechangeloglock""]
Params:[]
2023-07-28T07:54:29.371+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:29.372+03:00  INFO 16765 --- [           main] liquibase.database                       : Successfully deleted all supported object types in schema test.public.
2023-07-28T07:54:29.376+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:False
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:29.378+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.378+03:00  INFO 16765 --- [           main] liquibase.lockservice                    : Successfully released change log lock
2023-07-28T07:54:29.380+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.382+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:False
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:29.384+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
All objects dropped from test@jdbc:postgresql://localhost:32782/test?loggerLevel=OFF
2023-07-28T07:54:29.474+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:False
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangelog"]
Params:[]
2023-07-28T07:54:29.475+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.476+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.482+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.483+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:0, Success:False
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:29.485+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.490+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE TABLE public.databasechangeloglock (ID INTEGER NOT NULL, LOCKED BOOLEAN NOT NULL, LOCKGRANTED TIMESTAMP WITHOUT TIME ZONE, LOCKEDBY VARCHAR(255), CONSTRAINT databasechangeloglock_pkey PRIMARY KEY (ID))"]
Params:[]
2023-07-28T07:54:29.490+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:29.492+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:29.492+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:29.494+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DELETE FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:29.495+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangeloglock (ID, LOCKED) VALUES (1, FALSE)"]
Params:[]
2023-07-28T07:54:29.496+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:29.498+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT LOCKED FROM public.databasechangeloglock WHERE ID=1"]
Params:[]
2023-07-28T07:54:29.498+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:29.501+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["UPDATE public.databasechangeloglock SET LOCKED = TRUE, LOCKEDBY = 'oleh-HP-Compaq-6005-Pro-SFF-PC (172.17.0.1)', LOCKGRANTED = NOW() WHERE ID = 1 AND LOCKED = FALSE"]
Params:[]
2023-07-28T07:54:29.502+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:29.502+03:00  INFO 16765 --- [           main] liquibase.lockservice                    : Successfully acquired change log lock
2023-07-28T07:54:29.503+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.507+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Creating database history table with name: public.databasechangelog
2023-07-28T07:54:29.515+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:3, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE TABLE public.databasechangelog (ID VARCHAR(255) NOT NULL, AUTHOR VARCHAR(255) NOT NULL, FILENAME VARCHAR(255) NOT NULL, DATEEXECUTED TIMESTAMP WITHOUT TIME ZONE NOT NULL, ORDEREXECUTED INTEGER NOT NULL, EXECTYPE VARCHAR(10) NOT NULL, MD5SUM VARCHAR(35), DESCRIPTION VARCHAR(255), COMMENTS VARCHAR(255), TAG VARCHAR(255), LIQUIBASE VARCHAR(20), CONTEXTS VARCHAR(255), LABELS VARCHAR(255), DEPLOYMENT_ID VARCHAR(10))"]
Params:[]
2023-07-28T07:54:29.516+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:29.519+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangelog"]
Params:[]
2023-07-28T07:54:29.520+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Reading from public.databasechangelog
2023-07-28T07:54:29.538+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT * FROM public.databasechangelog ORDER BY DATEEXECUTED ASC, ORDEREXECUTED ASC"]
Params:[]
2023-07-28T07:54:29.538+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:29.541+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:29.545+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:3, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:29.546+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:29.549+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
Running Changeset: db/changelog/sql/V01_create-geoip-tables.sql::1689478830697-1::obaibula
2023-07-28T07:54:29.587+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.602+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:6, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE TABLE IF NOT EXISTS "geoip2_network" (
    "network" CIDR NOT NULL,
    "geoname_id" INTEGER,
    "registered_country_geoname_id" INTEGER,
    "represented_country_geoname_id" INTEGER,
    "is_anonymous_proxy" BOOLEAN,
    "is_satellite_provider" BOOLEAN,
    "postal_code" TEXT,
    "latitude" numeric,
    "longitude" numeric,
    "accuracy_radius" INTEGER)"]
Params:[]
2023-07-28T07:54:29.603+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:29.608+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V01_create-geoip-tables.sql::1689478830697-1::obaibula ran successfully in 28ms
2023-07-28T07:54:29.616+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:7, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT MAX(ORDEREXECUTED) FROM public.databasechangelog"]
Params:[]
2023-07-28T07:54:29.617+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:29.623+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1689478830697-1', 'obaibula', 'db/changelog/sql/V01_create-geoip-tables.sql', NOW(), 1, '8:de8d74ac6944a1951ef19b05f337b8b6', 'sql', '', 'EXECUTED', 'prod', NULL, '4.20.0', '0520069551')"]
Params:[]
2023-07-28T07:54:29.627+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V01_create-geoip-tables.sql::1689478830697-3::obaibula
2023-07-28T07:54:29.635+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.648+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE TABLE IF NOT EXISTS "geoip2_location" (
    "geoname_id" INTEGER NOT NULL,
    "locale_code" TEXT NOT NULL,
    "continent_code" TEXT NOT NULL,
    "continent_name" TEXT NOT NULL,
    "country_iso_code" TEXT,
    "country_name" TEXT,
    "subdivision_1_iso_code" TEXT,
    "subdivision_1_name" TEXT,
    "subdivision_2_iso_code" TEXT,
    "subdivision_2_name" TEXT,
    "city_name" TEXT,
    "metro_code" INTEGER,
    "time_zone" TEXT,
    "is_in_european_union"
    BOOLEAN NOT NULL,
    CONSTRAINT "geoip2_location_pkey" PRIMARY KEY ("geoname_id", "locale_code"))"]
Params:[]
2023-07-28T07:54:29.650+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:29.653+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V01_create-geoip-tables.sql::1689478830697-3::obaibula ran successfully in 22ms
2023-07-28T07:54:29.661+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:5, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1689478830697-3', 'obaibula', 'db/changelog/sql/V01_create-geoip-tables.sql', NOW(), 2, '8:98a65a153462100147a681cf52256eae', 'sql', '', 'EXECUTED', 'prod', NULL, '4.20.0', '0520069551')"]
Params:[]
2023-07-28T07:54:29.661+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V01_create-geoip-tables.sql::4::obaibula
2023-07-28T07:54:29.668+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:4, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.676+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO "geoip2_network" ("network", "geoname_id", "registered_country_geoname_id", "represented_country_geoname_id", "is_anonymous_proxy", "is_satellite_provider", "postal_code", "latitude", "longitude", "accuracy_radius")
VALUES
    ('176.36.192.0/20', 12345, 54321, NULL, FALSE, FALSE, '12345', 37.7749, -122.4194, 10),
    ('203.0.113.0/24', 54321, 98765, 24680, TRUE, TRUE, '54321', 40.7128, -74.0060, 20),
    ('198.51.100.0/24', NULL, NULL, NULL, FALSE, FALSE, NULL, 34.0522, -118.2437, 15),
    ('2001:db8::/32', 98765, NULL, NULL, TRUE, FALSE, '98765', 51.5074, -0.1278, 30)"]
Params:[]
2023-07-28T07:54:29.677+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:29.678+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V01_create-geoip-tables.sql::4::obaibula ran successfully in 14ms
2023-07-28T07:54:29.682+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('4', 'obaibula', 'db/changelog/sql/V01_create-geoip-tables.sql', NOW(), 3, '8:e278b1ac11ece9be77e385b3a54cb796', 'sql', '', 'EXECUTED', 'test', NULL, '4.20.0', '0520069551')"]
Params:[]
2023-07-28T07:54:29.683+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V01_create-geoip-tables.sql::5::obaibula
2023-07-28T07:54:29.690+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:3, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.697+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO "geoip2_location" ("geoname_id", "locale_code", "continent_code", "continent_name", "country_iso_code", "country_name", "subdivision_1_iso_code", "subdivision_1_name", "subdivision_2_iso_code", "subdivision_2_name", "city_name", "metro_code", "time_zone", "is_in_european_union")
VALUES
    (12345, 'en', 'UA', 'Europe', 'UA', 'Ukraine', 'EU', 'Europe', NULL, NULL, 'Lutsk', 123, 'Ukraine/Kyiv', FALSE),
    (54321, 'en', 'AS', 'Asia', 'JP', 'Japan', '13', 'Tokyo', NULL, NULL, 'Tokyo', 456, 'Asia/Tokyo', FALSE),
    (98765, 'en', 'EU', 'Europe', 'GB', 'United Kingdom', 'ENG', 'England', 'LND', 'London', 'London', NULL, 'Europe/London', TRUE),
    (24680, 'en', 'EU', 'Europe', 'DE', 'Germany', 'BB', 'Brandenburg', 'BR', 'Berlin', 'Berlin', 789, 'Europe/Berlin', TRUE)"]
Params:[]
2023-07-28T07:54:29.698+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:29.699+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V01_create-geoip-tables.sql::5::obaibula ran successfully in 13ms
2023-07-28T07:54:29.704+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('5', 'obaibula', 'db/changelog/sql/V01_create-geoip-tables.sql', NOW(), 4, '8:019499a2431517183f8b26aa6e95732d', 'sql', '', 'EXECUTED', 'test', NULL, '4.20.0', '0520069551')"]
Params:[]
2023-07-28T07:54:29.704+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V02_create-geoip-index.sql::1689478830697-2::obaibula
2023-07-28T07:54:29.710+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.715+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE INDEX IF NOT EXISTS "geoip2_network_network_idx" ON "geoip2_network"("network")"]
Params:[]
2023-07-28T07:54:29.716+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:29.718+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V02_create-geoip-index.sql::1689478830697-2::obaibula ran successfully in 10ms
2023-07-28T07:54:29.741+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:21, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1689478830697-2', 'obaibula', 'db/changelog/sql/V02_create-geoip-index.sql', NOW(), 5, '8:ced7f033d481d56b6108ed85a9570cae', 'sql', '', 'EXECUTED', 'prod', NULL, '4.20.0', '0520069551')"]
Params:[]
2023-07-28T07:54:29.742+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V03_create-users-table-for-security.sql::6::obaibula
2023-07-28T07:54:29.752+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:6, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.761+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:4, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE TABLE IF NOT EXISTS users (
    id BIGSERIAL PRIMARY KEY,
    first_name TEXT,
    last_name TEXT,
    email TEXT UNIQUE NOT NULL,
    password TEXT NOT NULL,
    role TEXT DEFAULT 'CUSTOMER'
)"]
Params:[]
2023-07-28T07:54:29.762+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:29.765+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V03_create-users-table-for-security.sql::6::obaibula ran successfully in 21ms
2023-07-28T07:54:29.775+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('6', 'obaibula', 'db/changelog/sql/V03_create-users-table-for-security.sql', NOW(), 6, '8:f6c78f3f87a278441177b7688195e3ae', 'sql', '', 'EXECUTED', 'prod', NULL, '4.20.0', '0520069551')"]
Params:[]
2023-07-28T07:54:29.776+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V03_create-users-table-for-security.sql::7::obaibula
2023-07-28T07:54:29.781+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.797+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:6, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO users(email, password)
VALUES('user@mail.com', 'qWaSzX123!#')"]
Params:[]
2023-07-28T07:54:29.797+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:29.798+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V03_create-users-table-for-security.sql::7::obaibula ran successfully in 20ms
2023-07-28T07:54:29.807+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:4, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('7', 'obaibula', 'db/changelog/sql/V03_create-users-table-for-security.sql', NOW(), 7, '8:38a3b56e8eff8ad7c0470e0c84d8f653', 'sql', '', 'EXECUTED', 'test', NULL, '4.20.0', '0520069551')"]
Params:[]
2023-07-28T07:54:29.807+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V04_create-tokens-table.sql::8::obaibula
2023-07-28T07:54:29.818+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.833+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:4, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE TABLE IF NOT EXISTS tokens(
    id BIGSERIAL PRIMARY KEY,
    token TEXT,
    token_type TEXT,
    expired BOOLEAN,
    revoked BOOLEAN,
    user_id BIGINT REFERENCES users(id) ON DELETE CASCADE
)"]
Params:[]
2023-07-28T07:54:29.835+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:29.836+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V04_create-tokens-table.sql::8::obaibula ran successfully in 24ms
2023-07-28T07:54:29.844+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('8', 'obaibula', 'db/changelog/sql/V04_create-tokens-table.sql', NOW(), 8, '8:8c8600a4d010571848db286ab0f16e9f', 'sql', '', 'EXECUTED', 'prod', NULL, '4.20.0', '0520069551')"]
Params:[]
2023-07-28T07:54:29.845+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V05_create-carts-table.sql::9::obaibula
2023-07-28T07:54:29.848+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.852+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE TABLE IF NOT EXISTS carts(
    user_id BIGINT PRIMARY KEY REFERENCES users(id) ON DELETE CASCADE,
    total_price DECIMAL(10, 2) DEFAULT 0
)"]
Params:[]
2023-07-28T07:54:29.852+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:29.856+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V05_create-carts-table.sql::9::obaibula ran successfully in 9ms
2023-07-28T07:54:29.859+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('9', 'obaibula', 'db/changelog/sql/V05_create-carts-table.sql', NOW(), 9, '8:2c612c699be3a508883c676e9d004be2', 'sql', '', 'EXECUTED', 'prod', NULL, '4.20.0', '0520069551')"]
Params:[]
2023-07-28T07:54:29.860+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V06_create-offerings-table.sql::10::obaibula
2023-07-28T07:54:29.862+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.870+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:6, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE TABLE IF NOT EXISTS offerings(
    id BIGSERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    description TEXT NOT NULL,
    price DECIMAL(10, 2) NOT NULL CHECK (price >= 0),
    category TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    user_id BIGINT REFERENCES users(id) ON DELETE CASCADE
)"]
Params:[]
2023-07-28T07:54:29.871+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:29.872+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V06_create-offerings-table.sql::10::obaibula ran successfully in 11ms
2023-07-28T07:54:29.874+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('10', 'obaibula', 'db/changelog/sql/V06_create-offerings-table.sql', NOW(), 10, '8:5ad176a91b55e796dda20f48d26eae5c', 'sql', '', 'EXECUTED', 'prod', NULL, '4.20.0', '0520069551')"]
Params:[]
2023-07-28T07:54:29.875+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V07_create-favorite_offerings-table.sql::11::obaibula
2023-07-28T07:54:29.884+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.890+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:4, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE TABLE IF NOT EXISTS favourite_offerings (
    id BIGSERIAL PRIMARY KEY,
    user_id BIGINT REFERENCES users(id) ON DELETE CASCADE,
    offering_id BIGINT REFERENCES offerings(id) ON DELETE CASCADE,
    created_at TIMESTAMP DEFAULT NOW(),

    
    CONSTRAINT unique_user_fav_offering UNIQUE (user_id, offering_id)
)"]
Params:[]
2023-07-28T07:54:29.890+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:29.892+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V07_create-favorite_offerings-table.sql::11::obaibula ran successfully in 14ms
2023-07-28T07:54:29.902+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:4, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('11', 'obaibula', 'db/changelog/sql/V07_create-favorite_offerings-table.sql', NOW(), 11, '8:a0ef45e8fee292e6406de18e64e78160', 'sql', '', 'EXECUTED', 'prod', NULL, '4.20.0', '0520069551')"]
Params:[]
2023-07-28T07:54:29.903+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:29.904+03:00  INFO 16765 --- [           main] liquibase                                : Update command completed successfully.
2023-07-28T07:54:29.904+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.908+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["UPDATE public.databasechangeloglock SET LOCKED = FALSE, LOCKEDBY = NULL, LOCKGRANTED = NULL WHERE ID = 1"]
Params:[]
2023-07-28T07:54:29.908+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:29.909+03:00  INFO 16765 --- [           main] liquibase.lockservice                    : Successfully released change log lock
2023-07-28T07:54:29.911+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:3, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:29.937+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:4, Time:2, Success:True
Type:Prepared, Batch:False, QuerySize:1, BatchSize:0
Query:["select latitude, longitude, city_name
from geoip2_network net

left join geoip2_location location on (
  net.geoname_id = location.geoname_id
  and location.locale_code = 'en'
)
where network >> ?;
"]
Params:[(176.36.207.169)]
2023-07-28T07:54:29.940+03:00  INFO 16765 --- [           main] c.o.n.location.GeoIpRepositoryImpl       : Location retrieved for IP 176.36.207.169
]]></system-out>
  </testcase>
  <testcase name="shouldNotGetLocationIfIpDoesNotExist" classname="com.onrender.navkolodozvillya.location.GeoIpRepositoryImplTest" time="0.624">
    <system-out><![CDATA[2023-07-28T07:54:29.974+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["select version()"]
Params:[]
2023-07-28T07:54:29.979+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["select version()"]
Params:[]
2023-07-28T07:54:29.986+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:4, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["select setting from pg_settings where name = 'edb_redwood_date'"]
Params:[]
2023-07-28T07:54:29.992+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Callable, Batch:False, QuerySize:1, BatchSize:0
Query:["select current_schema()"]
Params:[()]
2023-07-28T07:54:29.993+03:00  INFO 16765 --- [           main] liquibase.database                       : Set default schema name to public
2023-07-28T07:54:30.002+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.004+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:30.005+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:30.005+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:30.007+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT LOCKED FROM public.databasechangeloglock WHERE ID=1"]
Params:[]
2023-07-28T07:54:30.007+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:30.009+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["UPDATE public.databasechangeloglock SET LOCKED = TRUE, LOCKEDBY = 'oleh-HP-Compaq-6005-Pro-SFF-PC (172.17.0.1)', LOCKGRANTED = NOW() WHERE ID = 1 AND LOCKED = FALSE"]
Params:[]
2023-07-28T07:54:30.010+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:30.011+03:00  INFO 16765 --- [           main] liquibase.lockservice                    : Successfully acquired change log lock
2023-07-28T07:54:30.012+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.013+03:00  INFO 16765 --- [           main] liquibase.command                        : Dropping Database Objects in schema: test.public
2023-07-28T07:54:30.024+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT MD5SUM FROM public.databasechangelog WHERE MD5SUM IS NOT NULL LIMIT 1"]
Params:[]
2023-07-28T07:54:30.025+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:30.026+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:30.027+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:30.028+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:30.039+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:4, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT c.relname AS "SEQUENCE_NAME",   s.seqmin AS "MIN_VALUE", s.seqmax AS "MAX_VALUE", s.seqincrement AS "INCREMENT_BY",   s.seqcycle AS "WILL_CYCLE", s.seqstart AS "START_VALUE", s.seqcache AS "CACHE_SIZE",   pg_catalog.format_type(s.seqtypid, NULL) AS "SEQ_TYPE" FROM pg_class c JOIN pg_sequence s on c.oid = s.seqrelid JOIN pg_namespace ns on c.relnamespace = ns.oid LEFT JOIN pg_depend d ON c.oid = d.objid WHERE c.relkind = 'S' AND ns.nspname = 'public' AND (c.oid not in (select ds.objid FROM pg_depend ds where ds.refobjsubid > 0)OR  (   d.deptype = 'a' AND EXISTS (       select 1 from pg_attribute a         JOIN pg_class t ON t.oid = d.refobjid AND a.attrelid=t.oid AND a.attnum=d.refobjsubid         LEFT JOIN pg_catalog.pg_attrdef ad ON ad.adrelid = a.attrelid AND ad.adnum = a.attnum        WHERE a.atthasdef = false or not (pg_get_expr(ad.adbin, ad.adrelid) ilike '%' || c.relname || '%'))   ))"]
Params:[]
2023-07-28T07:54:30.082+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:12, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["WITH RECURSIVE preference AS (
    SELECT 10 AS max_depth  -- The deeper the recursion goes, the slower it performs.
         , 16384 AS min_oid -- user objects only
         , '^(londiste|pgq|pg_toast)'::text AS schema_exclusion
         , '^pg_(conversion|language|ts_(dict|template))'::text AS class_exclusion
         , '{"SCHEMA":"00", "TABLE":"01", "CONSTRAINT":"02", "DEFAULT":"03",
      "INDEX":"05", "SEQUENCE":"06", "TRIGGER":"07", "FUNCTION":"08",
      "VIEW":"10", "MVIEW":"11", "FOREIGN":"12"}'::json AS type_ranks),
               dependency_pair AS (
                   WITH relation_object AS ( SELECT oid, oid::regclass::text AS object_name  FROM pg_class )
                   SELECT DISTINCT                          substring(pg_identify_object(classid, objid, 0)::text, E'(\\w+?)\\.') as referenced_schema_name,                          CASE classid
                              WHEN 'pg_constraint'::regclass THEN (SELECT CONTYPE::text FROM pg_constraint WHERE oid = objid)
                              ELSE objid::text
                              END AS CONTYPE,
                         CASE classid
                              WHEN 'pg_attrdef'::regclass THEN (SELECT attname FROM pg_attrdef d JOIN pg_attribute c ON (c.attrelid,c.attnum)=(d.adrelid,d.adnum) WHERE d.oid = objid)
                              WHEN 'pg_cast'::regclass THEN (SELECT concat(castsource::regtype::text, ' AS ', casttarget::regtype::text,' WITH ', castfunc::regprocedure::text) FROM pg_cast WHERE oid = objid)
                              WHEN 'pg_class'::regclass THEN rel.object_name
                              WHEN 'pg_constraint'::regclass THEN (SELECT conname FROM pg_constraint WHERE oid = objid)
                              WHEN 'pg_extension'::regclass THEN (SELECT extname FROM pg_extension WHERE oid = objid)
                              WHEN 'pg_namespace'::regclass THEN (SELECT nspname FROM pg_namespace WHERE oid = objid)
                              WHEN 'pg_opclass'::regclass THEN (SELECT opcname FROM pg_opclass WHERE oid = objid)
                              WHEN 'pg_operator'::regclass THEN (SELECT oprname FROM pg_operator WHERE oid = objid)
                              WHEN 'pg_opfamily'::regclass THEN (SELECT opfname FROM pg_opfamily WHERE oid = objid)
                              WHEN 'pg_proc'::regclass THEN objid::regprocedure::text
                              WHEN 'pg_rewrite'::regclass THEN (SELECT ev_class::regclass::text FROM pg_rewrite WHERE oid = objid)
                              WHEN 'pg_trigger'::regclass THEN (SELECT tgname FROM pg_trigger WHERE oid = objid)
                              WHEN 'pg_type'::regclass THEN objid::regtype::text
                              ELSE objid::text
                              END AS REFERENCED_NAME,
                          substring(pg_identify_object(refclassid, refobjid, 0)::text, E'(\\w+?)\\.') as referencing_schema_name,                           CASE refclassid
                              WHEN 'pg_namespace'::regclass THEN (SELECT nspname FROM pg_namespace WHERE oid = refobjid)
                              WHEN 'pg_class'::regclass THEN rrel.object_name
                              WHEN 'pg_opfamily'::regclass THEN (SELECT opfname FROM pg_opfamily WHERE oid = refobjid)
                              WHEN 'pg_proc'::regclass THEN refobjid::regprocedure::text
                              WHEN 'pg_type'::regclass THEN refobjid::regtype::text
                              ELSE refobjid::text
                              END AS REFERENCING_NAME
                   FROM pg_depend dep
                            LEFT JOIN relation_object rel ON rel.oid = dep.objid
                            LEFT JOIN relation_object rrel ON rrel.oid = dep.refobjid, preference
                   WHERE deptype = ANY('{n,a}')
                     AND objid >= preference.min_oid
                     AND (refobjid >= preference.min_oid OR refobjid = 2200) -- need public schema as root node
                     AND classid::regclass::text !~ preference.class_exclusion
                     AND refclassid::regclass::text !~ preference.class_exclusion
                     AND COALESCE(SUBSTRING(objid::regclass::text, E'^(\\\\w+)\\\\.'),'') !~ preference.schema_exclusion
                     AND COALESCE(SUBSTRING(refobjid::regclass::text, E'^(\\\\w+)\\\\.'),'') !~ preference.schema_exclusion
                   GROUP BY classid, objid, refclassid, refobjid, deptype, rel.object_name, rrel.object_name
               )
 select referenced_schema_name,
    (CASE
      WHEN position('.' in referenced_name) >0 THEN substring(referenced_name from position('.' in referenced_name)+1 for length(referenced_name))
      ELSE referenced_name
    END)  AS referenced_name, 
   referencing_schema_name,
   (CASE
      WHEN position('.' in referencing_name) >0 THEN substring(referencing_name from position('.' in referencing_name)+1 for length(referencing_name))
      ELSE referencing_name
    END)  AS referencing_name from dependency_pair where REFERENCED_NAME != REFERENCING_NAME  AND ( REFERENCED_NAME like 'public.%' OR REFERENCED_NAME NOT LIKE '%.%')
 AND (CONTYPE::text != 'p' AND CONTYPE::text != 'f')
 AND referencing_schema_name is not null and referencing_name is not null"]
Params:[]
2023-07-28T07:54:30.093+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:10, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["WITH RECURSIVE preference AS (
    SELECT 10 AS max_depth  -- The deeper the recursion goes, the slower it performs.
         , 16384 AS min_oid -- user objects only
         , '^(londiste|pgq|pg_toast)'::text AS schema_exclusion
         , '^pg_(conversion|language|ts_(dict|template))'::text AS class_exclusion
         , '{"SCHEMA":"00", "TABLE":"01", "CONSTRAINT":"02", "DEFAULT":"03",
      "INDEX":"05", "SEQUENCE":"06", "TRIGGER":"07", "FUNCTION":"08",
      "VIEW":"10", "MVIEW":"11", "FOREIGN":"12"}'::json AS type_ranks),
               dependency_pair AS (
                   WITH relation_object AS ( SELECT oid, oid::regclass::text AS object_name  FROM pg_class )
                   SELECT DISTINCT                          substring(pg_identify_object(classid, objid, 0)::text, E'(\\w+?)\\.') as referenced_schema_name,                          CASE classid
                              WHEN 'pg_constraint'::regclass THEN (SELECT CONTYPE::text FROM pg_constraint WHERE oid = objid)
                              ELSE objid::text
                              END AS CONTYPE,
                         CASE classid
                              WHEN 'pg_attrdef'::regclass THEN (SELECT attname FROM pg_attrdef d JOIN pg_attribute c ON (c.attrelid,c.attnum)=(d.adrelid,d.adnum) WHERE d.oid = objid)
                              WHEN 'pg_cast'::regclass THEN (SELECT concat(castsource::regtype::text, ' AS ', casttarget::regtype::text,' WITH ', castfunc::regprocedure::text) FROM pg_cast WHERE oid = objid)
                              WHEN 'pg_class'::regclass THEN rel.object_name
                              WHEN 'pg_constraint'::regclass THEN (SELECT conname FROM pg_constraint WHERE oid = objid)
                              WHEN 'pg_extension'::regclass THEN (SELECT extname FROM pg_extension WHERE oid = objid)
                              WHEN 'pg_namespace'::regclass THEN (SELECT nspname FROM pg_namespace WHERE oid = objid)
                              WHEN 'pg_opclass'::regclass THEN (SELECT opcname FROM pg_opclass WHERE oid = objid)
                              WHEN 'pg_operator'::regclass THEN (SELECT oprname FROM pg_operator WHERE oid = objid)
                              WHEN 'pg_opfamily'::regclass THEN (SELECT opfname FROM pg_opfamily WHERE oid = objid)
                              WHEN 'pg_proc'::regclass THEN objid::regprocedure::text
                              WHEN 'pg_rewrite'::regclass THEN (SELECT ev_class::regclass::text FROM pg_rewrite WHERE oid = objid)
                              WHEN 'pg_trigger'::regclass THEN (SELECT tgname FROM pg_trigger WHERE oid = objid)
                              WHEN 'pg_type'::regclass THEN objid::regtype::text
                              ELSE objid::text
                              END AS REFERENCED_NAME,
                          substring(pg_identify_object(refclassid, refobjid, 0)::text, E'(\\w+?)\\.') as referencing_schema_name,                           CASE refclassid
                              WHEN 'pg_namespace'::regclass THEN (SELECT nspname FROM pg_namespace WHERE oid = refobjid)
                              WHEN 'pg_class'::regclass THEN rrel.object_name
                              WHEN 'pg_opfamily'::regclass THEN (SELECT opfname FROM pg_opfamily WHERE oid = refobjid)
                              WHEN 'pg_proc'::regclass THEN refobjid::regprocedure::text
                              WHEN 'pg_type'::regclass THEN refobjid::regtype::text
                              ELSE refobjid::text
                              END AS REFERENCING_NAME
                   FROM pg_depend dep
                            LEFT JOIN relation_object rel ON rel.oid = dep.objid
                            LEFT JOIN relation_object rrel ON rrel.oid = dep.refobjid, preference
                   WHERE deptype = ANY('{n,a}')
                     AND objid >= preference.min_oid
                     AND (refobjid >= preference.min_oid OR refobjid = 2200) -- need public schema as root node
                     AND classid::regclass::text !~ preference.class_exclusion
                     AND refclassid::regclass::text !~ preference.class_exclusion
                     AND COALESCE(SUBSTRING(objid::regclass::text, E'^(\\\\w+)\\\\.'),'') !~ preference.schema_exclusion
                     AND COALESCE(SUBSTRING(refobjid::regclass::text, E'^(\\\\w+)\\\\.'),'') !~ preference.schema_exclusion
                   GROUP BY classid, objid, refclassid, refobjid, deptype, rel.object_name, rrel.object_name
               )
 select referenced_schema_name,
    (CASE
      WHEN position('.' in referenced_name) >0 THEN substring(referenced_name from position('.' in referenced_name)+1 for length(referenced_name))
      ELSE referenced_name
    END)  AS referenced_name, 
   referencing_schema_name,
   (CASE
      WHEN position('.' in referencing_name) >0 THEN substring(referencing_name from position('.' in referencing_name)+1 for length(referencing_name))
      ELSE referencing_name
    END)  AS referencing_name from dependency_pair where REFERENCED_NAME != REFERENCING_NAME  AND ( REFERENCED_NAME like 'public.%' OR REFERENCED_NAME NOT LIKE '%.%')
 AND (CONTYPE::text != 'p' AND CONTYPE::text != 'f')
 AND referencing_schema_name is not null and referencing_name is not null"]
Params:[]
2023-07-28T07:54:30.104+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:9, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["WITH RECURSIVE preference AS (
    SELECT 10 AS max_depth  -- The deeper the recursion goes, the slower it performs.
         , 16384 AS min_oid -- user objects only
         , '^(londiste|pgq|pg_toast)'::text AS schema_exclusion
         , '^pg_(conversion|language|ts_(dict|template))'::text AS class_exclusion
         , '{"SCHEMA":"00", "TABLE":"01", "CONSTRAINT":"02", "DEFAULT":"03",
      "INDEX":"05", "SEQUENCE":"06", "TRIGGER":"07", "FUNCTION":"08",
      "VIEW":"10", "MVIEW":"11", "FOREIGN":"12"}'::json AS type_ranks),
               dependency_pair AS (
                   WITH relation_object AS ( SELECT oid, oid::regclass::text AS object_name  FROM pg_class )
                   SELECT DISTINCT                          substring(pg_identify_object(classid, objid, 0)::text, E'(\\w+?)\\.') as referenced_schema_name,                          CASE classid
                              WHEN 'pg_constraint'::regclass THEN (SELECT CONTYPE::text FROM pg_constraint WHERE oid = objid)
                              ELSE objid::text
                              END AS CONTYPE,
                         CASE classid
                              WHEN 'pg_attrdef'::regclass THEN (SELECT attname FROM pg_attrdef d JOIN pg_attribute c ON (c.attrelid,c.attnum)=(d.adrelid,d.adnum) WHERE d.oid = objid)
                              WHEN 'pg_cast'::regclass THEN (SELECT concat(castsource::regtype::text, ' AS ', casttarget::regtype::text,' WITH ', castfunc::regprocedure::text) FROM pg_cast WHERE oid = objid)
                              WHEN 'pg_class'::regclass THEN rel.object_name
                              WHEN 'pg_constraint'::regclass THEN (SELECT conname FROM pg_constraint WHERE oid = objid)
                              WHEN 'pg_extension'::regclass THEN (SELECT extname FROM pg_extension WHERE oid = objid)
                              WHEN 'pg_namespace'::regclass THEN (SELECT nspname FROM pg_namespace WHERE oid = objid)
                              WHEN 'pg_opclass'::regclass THEN (SELECT opcname FROM pg_opclass WHERE oid = objid)
                              WHEN 'pg_operator'::regclass THEN (SELECT oprname FROM pg_operator WHERE oid = objid)
                              WHEN 'pg_opfamily'::regclass THEN (SELECT opfname FROM pg_opfamily WHERE oid = objid)
                              WHEN 'pg_proc'::regclass THEN objid::regprocedure::text
                              WHEN 'pg_rewrite'::regclass THEN (SELECT ev_class::regclass::text FROM pg_rewrite WHERE oid = objid)
                              WHEN 'pg_trigger'::regclass THEN (SELECT tgname FROM pg_trigger WHERE oid = objid)
                              WHEN 'pg_type'::regclass THEN objid::regtype::text
                              ELSE objid::text
                              END AS REFERENCED_NAME,
                          substring(pg_identify_object(refclassid, refobjid, 0)::text, E'(\\w+?)\\.') as referencing_schema_name,                           CASE refclassid
                              WHEN 'pg_namespace'::regclass THEN (SELECT nspname FROM pg_namespace WHERE oid = refobjid)
                              WHEN 'pg_class'::regclass THEN rrel.object_name
                              WHEN 'pg_opfamily'::regclass THEN (SELECT opfname FROM pg_opfamily WHERE oid = refobjid)
                              WHEN 'pg_proc'::regclass THEN refobjid::regprocedure::text
                              WHEN 'pg_type'::regclass THEN refobjid::regtype::text
                              ELSE refobjid::text
                              END AS REFERENCING_NAME
                   FROM pg_depend dep
                            LEFT JOIN relation_object rel ON rel.oid = dep.objid
                            LEFT JOIN relation_object rrel ON rrel.oid = dep.refobjid, preference
                   WHERE deptype = ANY('{n,a}')
                     AND objid >= preference.min_oid
                     AND (refobjid >= preference.min_oid OR refobjid = 2200) -- need public schema as root node
                     AND classid::regclass::text !~ preference.class_exclusion
                     AND refclassid::regclass::text !~ preference.class_exclusion
                     AND COALESCE(SUBSTRING(objid::regclass::text, E'^(\\\\w+)\\\\.'),'') !~ preference.schema_exclusion
                     AND COALESCE(SUBSTRING(refobjid::regclass::text, E'^(\\\\w+)\\\\.'),'') !~ preference.schema_exclusion
                   GROUP BY classid, objid, refclassid, refobjid, deptype, rel.object_name, rrel.object_name
               )
 select referenced_schema_name,
    (CASE
      WHEN position('.' in referenced_name) >0 THEN substring(referenced_name from position('.' in referenced_name)+1 for length(referenced_name))
      ELSE referenced_name
    END)  AS referenced_name, 
   referencing_schema_name,
   (CASE
      WHEN position('.' in referencing_name) >0 THEN substring(referencing_name from position('.' in referencing_name)+1 for length(referencing_name))
      ELSE referencing_name
    END)  AS referencing_name from dependency_pair where REFERENCED_NAME != REFERENCING_NAME  AND ( REFERENCED_NAME like 'public.%' OR REFERENCED_NAME NOT LIKE '%.%')
 AND (CONTYPE::text != 'p' AND CONTYPE::text != 'f')
 AND referencing_schema_name is not null and referencing_name is not null"]
Params:[]
2023-07-28T07:54:30.121+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:10, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["WITH RECURSIVE preference AS (
    SELECT 10 AS max_depth  -- The deeper the recursion goes, the slower it performs.
         , 16384 AS min_oid -- user objects only
         , '^(londiste|pgq|pg_toast)'::text AS schema_exclusion
         , '^pg_(conversion|language|ts_(dict|template))'::text AS class_exclusion
         , '{"SCHEMA":"00", "TABLE":"01", "CONSTRAINT":"02", "DEFAULT":"03",
      "INDEX":"05", "SEQUENCE":"06", "TRIGGER":"07", "FUNCTION":"08",
      "VIEW":"10", "MVIEW":"11", "FOREIGN":"12"}'::json AS type_ranks),
               dependency_pair AS (
                   WITH relation_object AS ( SELECT oid, oid::regclass::text AS object_name  FROM pg_class )
                   SELECT DISTINCT                          substring(pg_identify_object(classid, objid, 0)::text, E'(\\w+?)\\.') as referenced_schema_name,                          CASE classid
                              WHEN 'pg_constraint'::regclass THEN (SELECT CONTYPE::text FROM pg_constraint WHERE oid = objid)
                              ELSE objid::text
                              END AS CONTYPE,
                         CASE classid
                              WHEN 'pg_attrdef'::regclass THEN (SELECT attname FROM pg_attrdef d JOIN pg_attribute c ON (c.attrelid,c.attnum)=(d.adrelid,d.adnum) WHERE d.oid = objid)
                              WHEN 'pg_cast'::regclass THEN (SELECT concat(castsource::regtype::text, ' AS ', casttarget::regtype::text,' WITH ', castfunc::regprocedure::text) FROM pg_cast WHERE oid = objid)
                              WHEN 'pg_class'::regclass THEN rel.object_name
                              WHEN 'pg_constraint'::regclass THEN (SELECT conname FROM pg_constraint WHERE oid = objid)
                              WHEN 'pg_extension'::regclass THEN (SELECT extname FROM pg_extension WHERE oid = objid)
                              WHEN 'pg_namespace'::regclass THEN (SELECT nspname FROM pg_namespace WHERE oid = objid)
                              WHEN 'pg_opclass'::regclass THEN (SELECT opcname FROM pg_opclass WHERE oid = objid)
                              WHEN 'pg_operator'::regclass THEN (SELECT oprname FROM pg_operator WHERE oid = objid)
                              WHEN 'pg_opfamily'::regclass THEN (SELECT opfname FROM pg_opfamily WHERE oid = objid)
                              WHEN 'pg_proc'::regclass THEN objid::regprocedure::text
                              WHEN 'pg_rewrite'::regclass THEN (SELECT ev_class::regclass::text FROM pg_rewrite WHERE oid = objid)
                              WHEN 'pg_trigger'::regclass THEN (SELECT tgname FROM pg_trigger WHERE oid = objid)
                              WHEN 'pg_type'::regclass THEN objid::regtype::text
                              ELSE objid::text
                              END AS REFERENCED_NAME,
                          substring(pg_identify_object(refclassid, refobjid, 0)::text, E'(\\w+?)\\.') as referencing_schema_name,                           CASE refclassid
                              WHEN 'pg_namespace'::regclass THEN (SELECT nspname FROM pg_namespace WHERE oid = refobjid)
                              WHEN 'pg_class'::regclass THEN rrel.object_name
                              WHEN 'pg_opfamily'::regclass THEN (SELECT opfname FROM pg_opfamily WHERE oid = refobjid)
                              WHEN 'pg_proc'::regclass THEN refobjid::regprocedure::text
                              WHEN 'pg_type'::regclass THEN refobjid::regtype::text
                              ELSE refobjid::text
                              END AS REFERENCING_NAME
                   FROM pg_depend dep
                            LEFT JOIN relation_object rel ON rel.oid = dep.objid
                            LEFT JOIN relation_object rrel ON rrel.oid = dep.refobjid, preference
                   WHERE deptype = ANY('{n,a}')
                     AND objid >= preference.min_oid
                     AND (refobjid >= preference.min_oid OR refobjid = 2200) -- need public schema as root node
                     AND classid::regclass::text !~ preference.class_exclusion
                     AND refclassid::regclass::text !~ preference.class_exclusion
                     AND COALESCE(SUBSTRING(objid::regclass::text, E'^(\\\\w+)\\\\.'),'') !~ preference.schema_exclusion
                     AND COALESCE(SUBSTRING(refobjid::regclass::text, E'^(\\\\w+)\\\\.'),'') !~ preference.schema_exclusion
                   GROUP BY classid, objid, refclassid, refobjid, deptype, rel.object_name, rrel.object_name
               )
 select referenced_schema_name,
    (CASE
      WHEN position('.' in referenced_name) >0 THEN substring(referenced_name from position('.' in referenced_name)+1 for length(referenced_name))
      ELSE referenced_name
    END)  AS referenced_name, 
   referencing_schema_name,
   (CASE
      WHEN position('.' in referencing_name) >0 THEN substring(referencing_name from position('.' in referencing_name)+1 for length(referencing_name))
      ELSE referencing_name
    END)  AS referencing_name from dependency_pair where REFERENCED_NAME != REFERENCING_NAME  AND ( REFERENCED_NAME like 'public.%' OR REFERENCED_NAME NOT LIKE '%.%')
 AND (CONTYPE::text != 'p' AND CONTYPE::text != 'f')
 AND referencing_schema_name is not null and referencing_name is not null"]
Params:[]
2023-07-28T07:54:30.150+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DROP TABLE "public"."favourite_offerings" CASCADE"]
Params:[]
2023-07-28T07:54:30.155+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:3, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DROP TABLE "public"."offerings" CASCADE"]
Params:[]
2023-07-28T07:54:30.160+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DROP TABLE "public"."carts" CASCADE"]
Params:[]
2023-07-28T07:54:30.165+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DROP TABLE "public"."tokens" CASCADE"]
Params:[]
2023-07-28T07:54:30.168+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DROP TABLE "public"."users" CASCADE"]
Params:[]
2023-07-28T07:54:30.171+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DROP TABLE "public"."geoip2_network" CASCADE"]
Params:[]
2023-07-28T07:54:30.173+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DROP TABLE "public"."geoip2_location" CASCADE"]
Params:[]
2023-07-28T07:54:30.176+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM "public"."databasechangelog""]
Params:[]
2023-07-28T07:54:30.182+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["select CONSTRAINT_NAME, TABLE_NAME from information_schema.table_constraints where constraint_catalog='test' and constraint_schema='public' and constraint_type='UNIQUE' and table_name='databasechangelog'"]
Params:[]
2023-07-28T07:54:30.215+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT c.relname AS "SEQUENCE_NAME",   s.seqmin AS "MIN_VALUE", s.seqmax AS "MAX_VALUE", s.seqincrement AS "INCREMENT_BY",   s.seqcycle AS "WILL_CYCLE", s.seqstart AS "START_VALUE", s.seqcache AS "CACHE_SIZE",   pg_catalog.format_type(s.seqtypid, NULL) AS "SEQ_TYPE" FROM pg_class c JOIN pg_sequence s on c.oid = s.seqrelid JOIN pg_namespace ns on c.relnamespace = ns.oid LEFT JOIN pg_depend d ON c.oid = d.objid WHERE c.relkind = 'S' AND ns.nspname = 'public' AND (c.oid not in (select ds.objid FROM pg_depend ds where ds.refobjsubid > 0)OR  (   d.deptype = 'a' AND EXISTS (       select 1 from pg_attribute a         JOIN pg_class t ON t.oid = d.refobjid AND a.attrelid=t.oid AND a.attnum=d.refobjsubid         LEFT JOIN pg_catalog.pg_attrdef ad ON ad.adrelid = a.attrelid AND ad.adnum = a.attnum        WHERE a.atthasdef = false or not (pg_get_expr(ad.adbin, ad.adrelid) ilike '%' || c.relname || '%'))   ))"]
Params:[]
2023-07-28T07:54:30.219+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["select CONSTRAINT_NAME, TABLE_NAME from information_schema.table_constraints where constraint_catalog='test' and constraint_schema='public' and constraint_type='UNIQUE' and table_name='databasechangeloglock'"]
Params:[]
2023-07-28T07:54:30.266+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DROP TABLE "public"."databasechangelog""]
Params:[]
2023-07-28T07:54:30.268+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:30.273+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM "public"."databasechangeloglock""]
Params:[]
2023-07-28T07:54:30.279+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["select CONSTRAINT_NAME, TABLE_NAME from information_schema.table_constraints where constraint_catalog='test' and constraint_schema='public' and constraint_type='UNIQUE' and table_name='databasechangeloglock'"]
Params:[]
2023-07-28T07:54:30.307+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT c.relname AS "SEQUENCE_NAME",   s.seqmin AS "MIN_VALUE", s.seqmax AS "MAX_VALUE", s.seqincrement AS "INCREMENT_BY",   s.seqcycle AS "WILL_CYCLE", s.seqstart AS "START_VALUE", s.seqcache AS "CACHE_SIZE",   pg_catalog.format_type(s.seqtypid, NULL) AS "SEQ_TYPE" FROM pg_class c JOIN pg_sequence s on c.oid = s.seqrelid JOIN pg_namespace ns on c.relnamespace = ns.oid LEFT JOIN pg_depend d ON c.oid = d.objid WHERE c.relkind = 'S' AND ns.nspname = 'public' AND (c.oid not in (select ds.objid FROM pg_depend ds where ds.refobjsubid > 0)OR  (   d.deptype = 'a' AND EXISTS (       select 1 from pg_attribute a         JOIN pg_class t ON t.oid = d.refobjid AND a.attrelid=t.oid AND a.attnum=d.refobjsubid         LEFT JOIN pg_catalog.pg_attrdef ad ON ad.adrelid = a.attrelid AND ad.adnum = a.attnum        WHERE a.atthasdef = false or not (pg_get_expr(ad.adbin, ad.adrelid) ilike '%' || c.relname || '%'))   ))"]
Params:[]
2023-07-28T07:54:30.321+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DROP TABLE "public"."databasechangeloglock""]
Params:[]
2023-07-28T07:54:30.322+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:30.324+03:00  INFO 16765 --- [           main] liquibase.database                       : Successfully deleted all supported object types in schema test.public.
2023-07-28T07:54:30.327+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:2, Success:False
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:30.328+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.328+03:00  INFO 16765 --- [           main] liquibase.lockservice                    : Successfully released change log lock
2023-07-28T07:54:30.328+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.329+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:False
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:30.331+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
All objects dropped from test@jdbc:postgresql://localhost:32782/test?loggerLevel=OFF
2023-07-28T07:54:30.380+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:False
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangelog"]
Params:[]
2023-07-28T07:54:30.381+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.381+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.386+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.387+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:False
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:30.388+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.391+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE TABLE public.databasechangeloglock (ID INTEGER NOT NULL, LOCKED BOOLEAN NOT NULL, LOCKGRANTED TIMESTAMP WITHOUT TIME ZONE, LOCKEDBY VARCHAR(255), CONSTRAINT databasechangeloglock_pkey PRIMARY KEY (ID))"]
Params:[]
2023-07-28T07:54:30.391+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:30.393+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:30.393+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:30.395+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["DELETE FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:30.395+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangeloglock (ID, LOCKED) VALUES (1, FALSE)"]
Params:[]
2023-07-28T07:54:30.395+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:30.397+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT LOCKED FROM public.databasechangeloglock WHERE ID=1"]
Params:[]
2023-07-28T07:54:30.397+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:30.399+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["UPDATE public.databasechangeloglock SET LOCKED = TRUE, LOCKEDBY = 'oleh-HP-Compaq-6005-Pro-SFF-PC (172.17.0.1)', LOCKGRANTED = NOW() WHERE ID = 1 AND LOCKED = FALSE"]
Params:[]
2023-07-28T07:54:30.399+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:30.399+03:00  INFO 16765 --- [           main] liquibase.lockservice                    : Successfully acquired change log lock
2023-07-28T07:54:30.400+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.403+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Creating database history table with name: public.databasechangelog
2023-07-28T07:54:30.409+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE TABLE public.databasechangelog (ID VARCHAR(255) NOT NULL, AUTHOR VARCHAR(255) NOT NULL, FILENAME VARCHAR(255) NOT NULL, DATEEXECUTED TIMESTAMP WITHOUT TIME ZONE NOT NULL, ORDEREXECUTED INTEGER NOT NULL, EXECTYPE VARCHAR(10) NOT NULL, MD5SUM VARCHAR(35), DESCRIPTION VARCHAR(255), COMMENTS VARCHAR(255), TAG VARCHAR(255), LIQUIBASE VARCHAR(20), CONTEXTS VARCHAR(255), LABELS VARCHAR(255), DEPLOYMENT_ID VARCHAR(10))"]
Params:[]
2023-07-28T07:54:30.409+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:30.411+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangelog"]
Params:[]
2023-07-28T07:54:30.411+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Reading from public.databasechangelog
2023-07-28T07:54:30.412+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT * FROM public.databasechangelog ORDER BY DATEEXECUTED ASC, ORDEREXECUTED ASC"]
Params:[]
2023-07-28T07:54:30.412+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:30.413+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:30.414+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT COUNT(*) FROM public.databasechangeloglock"]
Params:[]
2023-07-28T07:54:30.414+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:30.415+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
Running Changeset: db/changelog/sql/V01_create-geoip-tables.sql::1689478830697-1::obaibula
2023-07-28T07:54:30.426+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.430+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE TABLE IF NOT EXISTS "geoip2_network" (
    "network" CIDR NOT NULL,
    "geoname_id" INTEGER,
    "registered_country_geoname_id" INTEGER,
    "represented_country_geoname_id" INTEGER,
    "is_anonymous_proxy" BOOLEAN,
    "is_satellite_provider" BOOLEAN,
    "postal_code" TEXT,
    "latitude" numeric,
    "longitude" numeric,
    "accuracy_radius" INTEGER)"]
Params:[]
2023-07-28T07:54:30.430+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:30.431+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V01_create-geoip-tables.sql::1689478830697-1::obaibula ran successfully in 9ms
2023-07-28T07:54:30.434+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SELECT MAX(ORDEREXECUTED) FROM public.databasechangelog"]
Params:[]
2023-07-28T07:54:30.434+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:30.436+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1689478830697-1', 'obaibula', 'db/changelog/sql/V01_create-geoip-tables.sql', NOW(), 1, '8:de8d74ac6944a1951ef19b05f337b8b6', 'sql', '', 'EXECUTED', 'prod', NULL, '4.20.0', '0520070416')"]
Params:[]
2023-07-28T07:54:30.437+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V01_create-geoip-tables.sql::1689478830697-3::obaibula
2023-07-28T07:54:30.441+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.446+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:2, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE TABLE IF NOT EXISTS "geoip2_location" (
    "geoname_id" INTEGER NOT NULL,
    "locale_code" TEXT NOT NULL,
    "continent_code" TEXT NOT NULL,
    "continent_name" TEXT NOT NULL,
    "country_iso_code" TEXT,
    "country_name" TEXT,
    "subdivision_1_iso_code" TEXT,
    "subdivision_1_name" TEXT,
    "subdivision_2_iso_code" TEXT,
    "subdivision_2_name" TEXT,
    "city_name" TEXT,
    "metro_code" INTEGER,
    "time_zone" TEXT,
    "is_in_european_union"
    BOOLEAN NOT NULL,
    CONSTRAINT "geoip2_location_pkey" PRIMARY KEY ("geoname_id", "locale_code"))"]
Params:[]
2023-07-28T07:54:30.446+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:30.447+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V01_create-geoip-tables.sql::1689478830697-3::obaibula ran successfully in 8ms
2023-07-28T07:54:30.449+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1689478830697-3', 'obaibula', 'db/changelog/sql/V01_create-geoip-tables.sql', NOW(), 2, '8:98a65a153462100147a681cf52256eae', 'sql', '', 'EXECUTED', 'prod', NULL, '4.20.0', '0520070416')"]
Params:[]
2023-07-28T07:54:30.449+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V01_create-geoip-tables.sql::4::obaibula
2023-07-28T07:54:30.451+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.455+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO "geoip2_network" ("network", "geoname_id", "registered_country_geoname_id", "represented_country_geoname_id", "is_anonymous_proxy", "is_satellite_provider", "postal_code", "latitude", "longitude", "accuracy_radius")
VALUES
    ('176.36.192.0/20', 12345, 54321, NULL, FALSE, FALSE, '12345', 37.7749, -122.4194, 10),
    ('203.0.113.0/24', 54321, 98765, 24680, TRUE, TRUE, '54321', 40.7128, -74.0060, 20),
    ('198.51.100.0/24', NULL, NULL, NULL, FALSE, FALSE, NULL, 34.0522, -118.2437, 15),
    ('2001:db8::/32', 98765, NULL, NULL, TRUE, FALSE, '98765', 51.5074, -0.1278, 30)"]
Params:[]
2023-07-28T07:54:30.455+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:30.456+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V01_create-geoip-tables.sql::4::obaibula ran successfully in 5ms
2023-07-28T07:54:30.458+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('4', 'obaibula', 'db/changelog/sql/V01_create-geoip-tables.sql', NOW(), 3, '8:e278b1ac11ece9be77e385b3a54cb796', 'sql', '', 'EXECUTED', 'test', NULL, '4.20.0', '0520070416')"]
Params:[]
2023-07-28T07:54:30.458+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V01_create-geoip-tables.sql::5::obaibula
2023-07-28T07:54:30.460+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.466+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO "geoip2_location" ("geoname_id", "locale_code", "continent_code", "continent_name", "country_iso_code", "country_name", "subdivision_1_iso_code", "subdivision_1_name", "subdivision_2_iso_code", "subdivision_2_name", "city_name", "metro_code", "time_zone", "is_in_european_union")
VALUES
    (12345, 'en', 'UA', 'Europe', 'UA', 'Ukraine', 'EU', 'Europe', NULL, NULL, 'Lutsk', 123, 'Ukraine/Kyiv', FALSE),
    (54321, 'en', 'AS', 'Asia', 'JP', 'Japan', '13', 'Tokyo', NULL, NULL, 'Tokyo', 456, 'Asia/Tokyo', FALSE),
    (98765, 'en', 'EU', 'Europe', 'GB', 'United Kingdom', 'ENG', 'England', 'LND', 'London', 'London', NULL, 'Europe/London', TRUE),
    (24680, 'en', 'EU', 'Europe', 'DE', 'Germany', 'BB', 'Brandenburg', 'BR', 'Berlin', 'Berlin', 789, 'Europe/Berlin', TRUE)"]
Params:[]
2023-07-28T07:54:30.467+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:30.468+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V01_create-geoip-tables.sql::5::obaibula ran successfully in 8ms
2023-07-28T07:54:30.470+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('5', 'obaibula', 'db/changelog/sql/V01_create-geoip-tables.sql', NOW(), 4, '8:019499a2431517183f8b26aa6e95732d', 'sql', '', 'EXECUTED', 'test', NULL, '4.20.0', '0520070416')"]
Params:[]
2023-07-28T07:54:30.470+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V02_create-geoip-index.sql::1689478830697-2::obaibula
2023-07-28T07:54:30.472+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.475+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE INDEX IF NOT EXISTS "geoip2_network_network_idx" ON "geoip2_network"("network")"]
Params:[]
2023-07-28T07:54:30.476+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:30.477+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V02_create-geoip-index.sql::1689478830697-2::obaibula ran successfully in 5ms
2023-07-28T07:54:30.479+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1689478830697-2', 'obaibula', 'db/changelog/sql/V02_create-geoip-index.sql', NOW(), 5, '8:ced7f033d481d56b6108ed85a9570cae', 'sql', '', 'EXECUTED', 'prod', NULL, '4.20.0', '0520070416')"]
Params:[]
2023-07-28T07:54:30.479+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V03_create-users-table-for-security.sql::6::obaibula
2023-07-28T07:54:30.481+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.487+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:4, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE TABLE IF NOT EXISTS users (
    id BIGSERIAL PRIMARY KEY,
    first_name TEXT,
    last_name TEXT,
    email TEXT UNIQUE NOT NULL,
    password TEXT NOT NULL,
    role TEXT DEFAULT 'CUSTOMER'
)"]
Params:[]
2023-07-28T07:54:30.487+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:30.488+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V03_create-users-table-for-security.sql::6::obaibula ran successfully in 8ms
2023-07-28T07:54:30.491+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('6', 'obaibula', 'db/changelog/sql/V03_create-users-table-for-security.sql', NOW(), 6, '8:f6c78f3f87a278441177b7688195e3ae', 'sql', '', 'EXECUTED', 'prod', NULL, '4.20.0', '0520070416')"]
Params:[]
2023-07-28T07:54:30.491+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V03_create-users-table-for-security.sql::7::obaibula
2023-07-28T07:54:30.493+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.496+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO users(email, password)
VALUES('user@mail.com', 'qWaSzX123!#')"]
Params:[]
2023-07-28T07:54:30.496+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:30.497+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V03_create-users-table-for-security.sql::7::obaibula ran successfully in 5ms
2023-07-28T07:54:30.501+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('7', 'obaibula', 'db/changelog/sql/V03_create-users-table-for-security.sql', NOW(), 7, '8:38a3b56e8eff8ad7c0470e0c84d8f653', 'sql', '', 'EXECUTED', 'test', NULL, '4.20.0', '0520070416')"]
Params:[]
2023-07-28T07:54:30.501+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V04_create-tokens-table.sql::8::obaibula
2023-07-28T07:54:30.508+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.514+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:4, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE TABLE IF NOT EXISTS tokens(
    id BIGSERIAL PRIMARY KEY,
    token TEXT,
    token_type TEXT,
    expired BOOLEAN,
    revoked BOOLEAN,
    user_id BIGINT REFERENCES users(id) ON DELETE CASCADE
)"]
Params:[]
2023-07-28T07:54:30.514+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:30.517+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V04_create-tokens-table.sql::8::obaibula ran successfully in 10ms
2023-07-28T07:54:30.519+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('8', 'obaibula', 'db/changelog/sql/V04_create-tokens-table.sql', NOW(), 8, '8:8c8600a4d010571848db286ab0f16e9f', 'sql', '', 'EXECUTED', 'prod', NULL, '4.20.0', '0520070416')"]
Params:[]
2023-07-28T07:54:30.520+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V05_create-carts-table.sql::9::obaibula
2023-07-28T07:54:30.531+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:10, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.540+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:3, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE TABLE IF NOT EXISTS carts(
    user_id BIGINT PRIMARY KEY REFERENCES users(id) ON DELETE CASCADE,
    total_price DECIMAL(10, 2) DEFAULT 0
)"]
Params:[]
2023-07-28T07:54:30.541+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:30.542+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V05_create-carts-table.sql::9::obaibula ran successfully in 21ms
2023-07-28T07:54:30.547+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('9', 'obaibula', 'db/changelog/sql/V05_create-carts-table.sql', NOW(), 9, '8:2c612c699be3a508883c676e9d004be2', 'sql', '', 'EXECUTED', 'prod', NULL, '4.20.0', '0520070416')"]
Params:[]
2023-07-28T07:54:30.547+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V06_create-offerings-table.sql::10::obaibula
2023-07-28T07:54:30.552+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.558+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:3, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE TABLE IF NOT EXISTS offerings(
    id BIGSERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    description TEXT NOT NULL,
    price DECIMAL(10, 2) NOT NULL CHECK (price >= 0),
    category TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    user_id BIGINT REFERENCES users(id) ON DELETE CASCADE
)"]
Params:[]
2023-07-28T07:54:30.559+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:30.560+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V06_create-offerings-table.sql::10::obaibula ran successfully in 11ms
2023-07-28T07:54:30.566+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:4, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('10', 'obaibula', 'db/changelog/sql/V06_create-offerings-table.sql', NOW(), 10, '8:5ad176a91b55e796dda20f48d26eae5c', 'sql', '', 'EXECUTED', 'prod', NULL, '4.20.0', '0520070416')"]
Params:[]
2023-07-28T07:54:30.567+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
Running Changeset: db/changelog/sql/V07_create-favorite_offerings-table.sql::11::obaibula
2023-07-28T07:54:30.570+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.576+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:3, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["CREATE TABLE IF NOT EXISTS favourite_offerings (
    id BIGSERIAL PRIMARY KEY,
    user_id BIGINT REFERENCES users(id) ON DELETE CASCADE,
    offering_id BIGINT REFERENCES offerings(id) ON DELETE CASCADE,
    created_at TIMESTAMP DEFAULT NOW(),

    
    CONSTRAINT unique_user_fav_offering UNIQUE (user_id, offering_id)
)"]
Params:[]
2023-07-28T07:54:30.576+03:00  INFO 16765 --- [           main] liquibase.changelog                      : Custom SQL executed
2023-07-28T07:54:30.577+03:00  INFO 16765 --- [           main] liquibase.changelog                      : ChangeSet db/changelog/sql/V07_create-favorite_offerings-table.sql::11::obaibula ran successfully in 9ms
2023-07-28T07:54:30.579+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('11', 'obaibula', 'db/changelog/sql/V07_create-favorite_offerings-table.sql', NOW(), 11, '8:a0ef45e8fee292e6406de18e64e78160', 'sql', '', 'EXECUTED', 'prod', NULL, '4.20.0', '0520070416')"]
Params:[]
2023-07-28T07:54:30.579+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:30.579+03:00  INFO 16765 --- [           main] liquibase                                : Update command completed successfully.
2023-07-28T07:54:30.580+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:0, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.582+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["UPDATE public.databasechangeloglock SET LOCKED = FALSE, LOCKEDBY = NULL, LOCKGRANTED = NULL WHERE ID = 1"]
Params:[]
2023-07-28T07:54:30.582+03:00  INFO 16765 --- [           main] liquibase.executor                       : Changelog query completed.
2023-07-28T07:54:30.582+03:00  INFO 16765 --- [           main] liquibase.lockservice                    : Successfully released change log lock
2023-07-28T07:54:30.583+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:5, Time:1, Success:True
Type:Statement, Batch:False, QuerySize:1, BatchSize:0
Query:["SHOW SEARCH_PATH"]
Params:[]
2023-07-28T07:54:30.585+03:00 DEBUG 16765 --- [           main] n.t.d.l.l.SLF4JQueryLoggingListener      : 
Name:dataSource, Connection:6, Time:1, Success:True
Type:Prepared, Batch:False, QuerySize:1, BatchSize:0
Query:["select latitude, longitude, city_name
from geoip2_network net

left join geoip2_location location on (
  net.geoname_id = location.geoname_id
  and location.locale_code = 'en'
)
where network >> ?;
"]
Params:[(177.46.207.170)]
2023-07-28T07:54:30.585+03:00  INFO 16765 --- [           main] c.o.n.location.GeoIpRepositoryImpl       : No location found for IP: 177.46.207.170
2023-07-28T07:54:30.586+03:00  INFO 16765 --- [           main] c.o.n.location.GeoIpRepositoryImpl       : Created default location for Kyiv
]]></system-out>
  </testcase>
</testsuite>